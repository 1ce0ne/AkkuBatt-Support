# ===============================================
# =============== –ë–ò–ë–õ–ò–û–¢–ï–ö–ò –ë–û–¢–ê ===============
# ===============================================

import telebot
import os
import threading
import time
import re
import pytz
from datetime import datetime, timedelta
from telebot import types
from flask import Flask, Response
from apscheduler.schedulers.background import BackgroundScheduler
from pymongo import MongoClient
from bson.objectid import ObjectId

# =================================================
# =============== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–û–¢–ê ===============
# =================================================

API_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')
MONGODB_URI = os.environ.get('MONGODB_URI', 'mongodb://localhost:27017/')
DATABASE_NAME = os.environ.get('DATABASE_NAME', 'AkkuBattBotSup')
PHOTOS_DIR = os.environ.get('PHOTOS_DIR', 'photos')

client = MongoClient(MONGODB_URI)
db = client[DATABASE_NAME]
reports_collection = db['reports']

bot = telebot.TeleBot(API_TOKEN, threaded=True)

# ==============================================
# =============== –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ===============
# ==============================================

app = Flask(__name__)

@app.route('/health', methods=['GET'])
def health_check():
    return Response("OK", status=200)

def run_flask():
    app.run(host='0.0.0.0', port=5000)

flask_thread = threading.Thread(target=run_flask)
flask_thread.start()

# ==================================================
# =============== –ü–ï–†–ï–ú–ï–ù–ù–´–ï –ò –§–õ–ê–ì–ò ===============
# ==================================================

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–æ–≤
flag = False
photo_process_flag = False
last_media_group_id = None
processed_media_groups = {}
reject_reason_data = {}
question_data = {}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ /photos
if not os.path.exists(PHOTOS_DIR):
    os.makedirs(PHOTOS_DIR)

# ====================================================
# =============== –û–ß–ò–°–¢–ö–ê –ü–ê–ü–ö–ò PHOTOS ===============
# ====================================================

def clean_photos_dir():
    try:
        now = datetime.now(pytz.timezone('Europe/Moscow'))
        print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ photos –≤ {now.strftime('%Y-%m-%d %H:%M:%S')}")

        for filename in os.listdir(PHOTOS_DIR):
            file_path = os.path.join(PHOTOS_DIR, filename)
            try:
                if os.path.isfile(file_path):
                    os.unlink(file_path)
                    print(f"–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")

        print("–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ photos –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ photos: {e}")


# –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤ 00:00 –ø–æ –ú–°–ö
scheduler = BackgroundScheduler(timezone=pytz.timezone('Europe/Moscow'))
scheduler.add_job(clean_photos_dir, 'cron', hour=0, minute=0)
scheduler.start()

# ====================================================================
# =============== –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===============
# ====================================================================

def init_mongodb():
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Å—Ö–µ–º—ã (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
        db.create_collection("reports", validator={
            "$jsonSchema": {
                "bsonType": "object",
                "required": ["user_id", "created_at"],
                "properties": {
                    "id": {"bsonType": "int"},
                    "user_id": {"bsonType": ["int", "long"]},  # –†–∞–∑—Ä–µ—à–∞–µ–º –æ–±–∞ —Ç–∏–ø–∞
                    "photo": {"bsonType": "string"},
                    "rental_time": {"bsonType": "string"},
                    "scooter_number": {"bsonType": "string"},
                    "phone_number": {"bsonType": "string"},
                    "card_number": {"bsonType": "string"},
                    "description_of_the_problem": {"bsonType": "string"},
                    "sent": {"bsonType": "int", "minimum": 0, "maximum": 1},
                    "returned": {"bsonType": "int", "minimum": 0, "maximum": 2},
                    "refund_amount": {"bsonType": "double"},
                    "created_at": {"bsonType": "date"}
                }
            }
        })

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ id
        db.reports.create_index("id", unique=True)

        # –°–æ–∑–¥–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
        if "counters" not in db.list_collection_names():
            db.counters.insert_one({
                "_id": "reportid",
                "seq": 0
            })

    except Exception as e:
        # –ö–æ–ª–ª–µ–∫—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        print(f"MongoDB collection already exists: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ ID
def get_next_sequence_value(sequence_name):
    counter = db.counters.find_one_and_update(
        {"_id": sequence_name},
        {"$inc": {"seq": 1}},
        return_document=True
    )
    return counter["seq"]

init_mongodb()

# ======================================
# =============== –¢–ï–ö–°–¢–ê ===============
# ======================================

# –¢—É—Ç–æ—Ä –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
RegistrationTutorialText = (
    '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–∫–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´Akku-Batt¬ª –Ω–∞ —Å–≤–æ–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω.\n\n'

    '1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n'
    '   - –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üì±\n'
    '   - –ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n'
    '     ‚Ä¢ App Store\n'
    '     ‚Ä¢ RuStore\n'
    '     ‚Ä¢ APK-—Ñ–∞–π–ª —Å —Å–∞–π—Ç–∞ akku-batt.ru\n\n'

    '2) –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏:\n'
    '   - –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å:\n'
    '     ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ñ–µ—Ä—Ç—ã üìÑ\n'
    '     ‚Ä¢ –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n'
    '   - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤–∞–º 18+\n\n'

    '3) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å:\n'
    '   - –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ‚úèÔ∏è\n\n'

    '4) –ü—Ä–∏–≤—è–∂–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É:\n'
    '   - –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–µ–∑–¥–æ–∫ üí≥'
)

# –¢—É—Ç–æ—Ä–∏–∞–ª –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
RentTutorialText = (
    '–î–ª—è –∞—Ä–µ–Ω–¥—ã —Å–∞–º–æ–∫–∞—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏:\n\n'

    '1) –ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –ù–∞–π–¥–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π üó∫Ô∏è\n'
    '   - –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞ –∏–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n\n'

    '2) –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ\n'
    '   - –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É"\n'
    '   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (—ç–∫—Ä–∞–Ω —Å–∞–º–æ–∫–∞—Ç–∞ –∑–∞–≥–æ—Ä–∏—Ç—Å—è) üîÑ\n\n'

    '3) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–º–æ–∫–∞—Ç–∞:\n'
    '   - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è üëÄ\n'
    '   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Ç–æ—Ä–º–æ–∑–æ–≤\n\n'

    '4) –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –û—Å—Ç–∞–≤—å—Ç–µ –Ω–∞ –æ—Ç–º–µ—á–µ–Ω–Ω–æ–π –ø–∞—Ä–∫–æ–≤–∫–µ üÖø\n'
    '   - –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∞—á–µ —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è\n\n'

    '–ü—Ä–∏—è—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏! üõ¥üí®'
)

# –¢—É—Ç–æ—Ä–∏–∞–ª –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∞–º–æ–∫–∞—Ç–∞
HowToRideTutorialText = (
    '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∞–º–æ–∫–∞—Ç–∞:\n\n'

    '1) –ù–∞—á–∞–ª–æ –¥–≤–∏–∂–µ–Ω–∏—è:\n'
    '   - –°–Ω–∏–º–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç —Å –ø–æ–¥–Ω–æ–∂–∫–∏ –ø–ª–∞–≤–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –≤–ø–µ—Ä–µ–¥\n'
    '   - –í—Å—Ç–∞–Ω—å—Ç–µ –æ–¥–Ω–æ–π –Ω–æ–≥–æ–π –Ω–∞ –¥–µ–∫—É\n'
    '   - –¢–æ–ª–∫–Ω–∏—Ç–µ—Å—å –¥—Ä—É–≥–æ–π –Ω–æ–≥–æ–π\n'
    '   - –ü–ª–∞–≤–Ω–æ –Ω–∞–∂–º–∏—Ç–µ —Ä—É—á–∫—É –≥–∞–∑–∞ –ø–æ–¥ –±–æ–ª—å—à–∏–º –ø–∞–ª—å—Ü–µ–º –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏ üëÜ\n\n'

    '2) –°–º–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤:\n'
    '   - –î–≤–∞–∂–¥—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üîÑ\n'
    '   - –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:\n'
    '     ‚Ä¢ –≠–∫–æ üå±\n'
    '     ‚Ä¢ –î—Ä–∞–π–≤ üöÄ\n'
    '     ‚Ä¢ –°–ø–æ—Ä—Ç ‚ö°\n\n'

    '3) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞—Ä—ë–º:\n'
    '   - –ù–∞–∂–º–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üí°\n\n'

    '‚ö† –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ:\n'
    '   - –í–∫–ª—é—á–∞—Ç—å —Ñ–∞—Ä—ã –≤ —Ç—ë–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ üåô\n'
    '   - –°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n'

    '–ñ–µ–ª–∞–µ–º –≤–∞–º –ø—Ä–∏—è—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏! üòä'
)

# –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫—É–¥–∞ —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è 300 —Ä—É–±–ª–µ–π
WhereMoneyText = (
    '–ö–æ–≥–¥–∞ –≤—ã –±–µ—Ä–µ—Ç–µ —Å–∞–º–æ–∫–∞—Ç –≤ –∞—Ä–µ–Ω–¥—É, —Å –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è 300 —Ä—É–±–ª–µ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–ª–æ–≥–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏. üí∞\n\n'

    '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ø–∏—Å–∞–Ω–∏–µ:\n'
    '1. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–µ–∑–¥–∫–∏ —Å –∫–∞—Ä—Ç—ã —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã, –∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ª–æ–≥ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è. üîÑ\n'
    '2. –ï—Å–ª–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã, —Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã.\n\n'

    '–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–∞–Ω–∫–æ–º –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –¥–≤—É—Ö —Å—É—Ç–æ–∫. ‚è≥\n'
    '‚Äî –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–º–µ—Å—Ç–æ 300 —Ä—É–±–ª–µ–π –≤—ã —É–≤–∏–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏, –∞ –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ã –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω.\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ —Å –±–∞–Ω–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–º–∏–º–æ –±–ª–æ–∫–∏—Ä—É–µ–º–æ–≥–æ –∑–∞–ª–æ–≥–∞. üí≥'
)

# –¢—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ä–µ–Ω–¥—É
HowStopRentText = (
    '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:\n\n'

    '1. –û—Å—Ç–∞–≤—å—Ç–µ —Å–∞–º–æ–∫–∞—Ç –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤–æ–∫, –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º. üÖøÔ∏è\n'
    '2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n'
    '3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã, –Ω–∞–∂–∞–≤ –ø–æ—è–≤–∏–≤—à—É—é—Å—è –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n'
    '4. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã. ‚úÖ\n\n'

    '–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '‚Äî –ï—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è. ‚ö†Ô∏è\n'
    '‚Äî –ê—Ä–µ–Ω–¥—É –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤–∫–∞—Ö.\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Å–ø–∏—Å–∞–Ω–∏–π. üì±'
)

# –¢—É—Ç–æ—Ä–∏–∞–ª —á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å
FinishRentManualText = (
    '–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å" –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ:\n\n'

    '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Å–∞–º–æ–∫–∞—Ç–∞ üõ¥ (—Ç—Ä–µ—Ç—å—è —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, —Å –∫—Ä–∞—Å–Ω–æ–π –ø–æ–º–µ—Ç–∫–æ–π)\n'
    '2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç, –∞—Ä–µ–Ω–¥—É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å\n'
    '3. –ü–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å" - –Ω–∞–∂–º–∏—Ç–µ –µ–µ\n\n'

    '–í–∞–∂–Ω–æ:\n'
    '‚Äî –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã\n\n'
)

# –ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —Å–∞–º–æ–∫–∞—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
ScooterDontWork = (
    '–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–∫–∞—Ç–∞ –≤ –∑–æ–Ω–∞—Ö –∫–∞—Ç–∞–Ω–∏—è:\n\n'

    '‚Äî –†–∞–∑—Ä–µ—à–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º ‚úÖ\n'
    '‚Äî –ó–∞–ø—Ä–µ—â–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∞ –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º ‚õî\n\n'

    '–ß—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '1. –ü—Ä–∏ –≤—ã–µ–∑–¥–µ –∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é –∑–æ–Ω—É –∏–ª–∏ –≤—ä–µ–∑–¥–µ –≤ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—É—é —Å–∞–º–æ–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è\n'
    '2. –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∑–µ–ª–µ–Ω—É—é –∑–æ–Ω—É –∏–ª–∏ –ø–æ–∫–∏–Ω—å—Ç–µ –∫—Ä–∞—Å–Ω—É—é\n'
    '3. –ï—Å–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n'
    '   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n'
    '   ‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∫–æ–Ω–∫—É —Å–∞–º–æ–∫–∞—Ç–∞ üõ¥ (—Ç—Ä–µ—Ç—å—è —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ —Å –∫—Ä–∞—Å–Ω–æ–π –æ—Ç–º–µ—Ç–∫–æ–π)\n'
    '   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–∞–º–æ–∫–∞—Ç –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ–≥–æ\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –∑–æ–Ω –Ω–∞ –∫–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏'
)

# –ì–¥–µ —è –º–æ–≥—É –∫–∞—Ç–∞—Ç—å—Å—è
WhereICanRide = (
    '–ö–∞—Ç–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–æ–Ω–∞—Ö:\n\n'

    '1) –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã:\n'
    '   - –û–±–æ–∑–Ω–∞—á–µ–Ω—ã –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç–µ üó∫Ô∏è\n'
    '   - –ö–∞—Ç–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏—Ö –∑–æ–Ω–∞—Ö\n\n'

    '2) –ü—Ä–∏ –≤—ã–µ–∑–¥–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã:\n'
    '   - –°–∞–º–æ–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è\n'
    '   - –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∑–µ–ª–µ–Ω—É—é –∑–æ–Ω—É\n\n'
)

# –í–æ–∑–≤—Ä–∞—Ç –Ω–µ –ø—Ä–∏—à—ë–ª
ReturnDidNotArrivee = (
    '–ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ –ø—Ä–∏—à—ë–ª, –∑–Ω–∞—á–∏—Ç, '
    '–Ω–∞ –≤–∞—à–µ–π –∫–∞—Ä—Ç–µ –±—ã–ª–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ üí≥\n\n'
    '–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—ã–ª–∏ –≤–∑—è—Ç—ã –∏–∑ –∑–∞–ª–æ–≥–∞.'
)

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–∫–∞—Ç–æ–º
ScooterControlsText = (
    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–∞–º–æ–∫–∞—Ç–∞:\n\n'

    '1) –§–∞—Ä–∞ —Å–∞–º–æ–∫–∞—Ç–∞:\n'
    '   - –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∞ —Ä—É–ª–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏\n'
    '   - –û–¥–∏–Ω–∞—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - –≤–∫–ª/–≤—ã–∫–ª üí°\n'
    '   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ –¥–µ—Ä–∂–∞—Ç—å —Ñ–∞—Ä—É –≤–∫–ª—é—á–µ–Ω–Ω–æ–π\n\n'

    '2) –†–µ–∂–∏–º—ã –¥–≤–∏–∂–µ–Ω–∏—è:\n'
    '   - –î–æ—Å—Ç—É–ø–Ω—ã 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞:\n'
    '     ‚Ä¢ –≠–∫–æ (—ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π) üå±\n'
    '     ‚Ä¢ –î—Ä–∞–π–≤ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π) üöÄ\n'
    '     ‚Ä¢ –°–ø–æ—Ä—Ç (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å) ‚ö°\n'
    '   - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–≤–æ–π–Ω—ã–º –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏\n'
    '   - –í—ã–±–∏—Ä–∞–π—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º\n\n'

    '–î–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞—Ä—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫.'
)

# ============================================
# =============== –ü–∞—Ä—Å–∏–Ω–≥ –±–∞–∑—ã ===============
# ============================================

# –ü–∞—Ä—Å–∏–Ω–≥ –±–∞–∑—ã –Ω–∞ –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç—ã
def get_reports():
    try:
        reports = list(db.reports.find({"sent": 0}).sort("created_at", 1))
        return reports
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {e}")
        return []


# =================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ ===============
# =================================================

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞
def mark_as_sent(report_id):
    try:
        db.reports.update_one(
            {"id": report_id},
            {"$set": {"sent": 1}}
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")

# =======================================================
# =============== –ö–æ–ª-–≤–æ –æ—Ç—á–µ—Ç–æ–≤ —Å –Ω–æ–º–µ—Ä–∞ ===============
# =======================================================

def get_report_count_by_phone(phone_number):
    try:
        return db.reports.count_documents({"phone_number": phone_number})
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç—á–µ—Ç–æ–≤: {e}")
        return 1

# ===============================================
# =============== –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ ===============
# ===============================================

def send_reports():
    while True:
        reports = get_reports()
        for report in reports:
            try:
                report_id = report["id"]
                user_id = report["user_id"]
                photo = report.get("photo", "")
                rent_data = report.get("rental_time", "")
                scooter_number = report.get("scooter_number", "")
                phone_number = report.get("phone_number", "")
                card_number = report.get("card_number", "")
                description_of_the_problem = report.get("description_of_the_problem", "")

                report_count = get_report_count_by_phone(phone_number)

                message = (
                    f"üìù Report: #{report_id}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                    f"üë§ User ID: {user_id}\n"
                    f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\n"
                    f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤ –æ—Ç —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞: {report_count}\n"
                    f"‚è±Ô∏è –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã: {rent_data}\n"
                    f"üõ¥ –ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞: {scooter_number}\n"
                    f"üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card_number}\n"
                    f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {description_of_the_problem}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                )

                # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
                markup = types.InlineKeyboardMarkup(row_width=2)
                approve_button = types.InlineKeyboardButton(
                    "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç",
                    callback_data=f'return_approve_{report_id}_{user_id}'
                )
                reject_button = types.InlineKeyboardButton(
                    "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
                    callback_data=f'return_reject_{report_id}_{user_id}'
                )
                # question_button = types.InlineKeyboardButton(
                #     "–£—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å",
                #     callback_data=f'return_question_{report_id}_{user_id}'
                # )
                markup.add(approve_button, reject_button)

                if photo and os.path.isfile(photo):
                    try:
                        with open(photo, 'rb') as photo_file:
                            sent_message = bot.send_photo(
                                CHAT_ID,
                                photo_file,
                                caption=message,
                                reply_markup=markup
                            )
                            if sent_message.message_id:
                                mark_as_sent(report_id)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
                        bot.send_message(
                            CHAT_ID,
                            message + f"\n[–§–æ—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: {photo}]",
                            reply_markup=markup
                        )
                        mark_as_sent(report_id)
                else:
                    bot.send_message(
                        CHAT_ID,
                        message,
                        reply_markup=markup
                    )
                    mark_as_sent(report_id)

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
                continue

        time.sleep(60)


# ===================================================
# =============== –í–µ—Ä–¥–∏–∫—Ç –ø–æ –≤–æ–∑–≤—Ä–∞—Ç—É ===============
# ===================================================

@bot.callback_query_handler(func=lambda call: call.data.startswith('return_'))
def handle_return_decision(call):
    try:
        action, report_id, user_id = call.data.split('_')[1:]
        user_id = int(user_id)

        if action == 'approve':
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –≤–æ–∑–≤—Ä–∞—Ç–∞
            reject_reason_data[call.from_user.id] = {
                'report_id': report_id,
                'user_id': user_id,
                'message_id': call.message.message_id,
                'chat_id': call.message.chat.id,
                'current_text': call.message.caption if call.message.caption else call.message.text,
                'step': 'waiting_for_refund_amount'
            }

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞
            msg = bot.send_message(
                call.message.chat.id,
                "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞:",
                reply_to_message_id=call.message.message_id
            )

            bot.answer_callback_query(call.id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞")

        elif action == 'reject':
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏—á–∏–Ω—ã
            reject_reason_data[call.from_user.id] = {
                'report_id': report_id,
                'user_id': user_id,
                'message_id': call.message.message_id,
                'chat_id': call.message.chat.id,
                'current_text': call.message.caption if call.message.caption else call.message.text,
                'step': 'waiting_for_reject_reason'
            }

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
            msg = bot.send_message(
                call.message.chat.id,
                "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
                reply_to_message_id=call.message.message_id
            )

            bot.answer_callback_query(call.id, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è")


        # elif action == 'question':
        #
        #     # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–ø—Ä–æ—Å–∞
        #     reject_reason_data[call.from_user.id] = {
        #         'report_id': report_id,
        #         'user_id': user_id,
        #         'message_id': call.message.message_id,
        #         'chat_id': call.message.chat.id,
        #         'current_text': call.message.caption if call.message.caption else call.message.text,
        #         'step': 'waiting_for_question'
        #     }
        #
        #     msg = bot.send_message(
        #         call.message.chat.id,
        #         "–í–≤–µ–¥–∏—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–Ω —Å–º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ):",
        #         reply_to_message_id=call.message.message_id
        #     )
        #
        #     bot.answer_callback_query(call.id, "–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


# –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –ø–æ—Ç–æ–∫–µ
reporting_thread = threading.Thread(target=send_reports)
reporting_thread.start()


# ===============================================
# =============== –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞ ===============
# ===============================================

@bot.message_handler(
    func=lambda message: message.reply_to_message and message.reply_to_message.from_user.id == bot.get_me().id)
def handle_replied_message(message):
    try:
        user_id = message.from_user.id
        if user_id not in reject_reason_data:
            return

        data = reject_reason_data[user_id]

        if data.get('step') == 'waiting_for_refund_amount':
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –≤–æ–∑–≤—Ä–∞—Ç–∞
            try:
                refund_amount = float(message.text.replace(',', '.'))

                if refund_amount <= 0:
                    raise ValueError

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                reject_reason_data[user_id]['refund_amount'] = refund_amount
                reject_reason_data[user_id]['step'] = 'waiting_for_comment'

                msg = bot.send_message(
                    message.chat.id,
                    "–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ \"-\"):",
                    reply_to_message_id=data['message_id']
                )

                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                try:
                    bot.delete_message(message.chat.id, message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    bot.delete_message(message.chat.id, message.reply_to_message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

            except ValueError:
                msg = bot.send_message(
                    message.chat.id,
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100 –∏–ª–∏ 50.50):",
                    reply_to_message_id=data['message_id']
                )

        elif data.get('step') == 'waiting_for_comment':
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            comment = message.text if message.text != "-" else None
            refund_amount = reject_reason_data[user_id]['refund_amount']

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
            update_return_status(data['report_id'], 1, data['user_id'], refund_amount)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
            status_text = f"\n\n‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞\n–°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {refund_amount}‚ÇΩ"
            if comment:
                status_text += f"\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
            new_text = (data['current_text'] or "") + status_text

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                bot.edit_message_text(
                    chat_id=data['chat_id'],
                    message_id=data['message_id'],
                    text=new_text,
                    reply_markup=None
                )
            except:
                try:
                    bot.edit_message_caption(
                        chat_id=data['chat_id'],
                        message_id=data['message_id'],
                        caption=new_text,
                        reply_markup=None
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            user_message = f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –æ–¥–æ–±—Ä–µ–Ω–∞. –°—É–º–º–∞: {refund_amount}‚ÇΩ"
            if comment:
                user_message += f"\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
            bot.send_message(data['user_id'], user_message)

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if user_id in reject_reason_data:
                del reject_reason_data[user_id]

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                bot.delete_message(message.chat.id, message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                bot.delete_message(message.chat.id, message.reply_to_message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ (–∑–∞–ø—Ä–æ—Å —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è)
                for msg_id in range(message.reply_to_message.message_id - 1, message.reply_to_message.message_id - 3, -1):
                    bot.delete_message(message.chat.id, msg_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

        elif data.get('step') == 'waiting_for_reject_reason':
            reason = message.text

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
            update_return_status(data['report_id'], 2, data['user_id'])

            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
            status_text = f"\n\n‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
            new_text = (data['current_text'] or "") + status_text

            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                bot.edit_message_text(
                    chat_id=data['chat_id'],
                    message_id=data['message_id'],
                    text=new_text,
                    reply_markup=None
                )
            except:
                try:
                    bot.edit_message_caption(
                        chat_id=data['chat_id'],
                        message_id=data['message_id'],
                        caption=new_text,
                        reply_markup=None
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(
                data['user_id'],
                f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
            )

            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if user_id in reject_reason_data:
                del reject_reason_data[user_id]

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                bot.delete_message(message.chat.id, message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                bot.delete_message(message.chat.id, message.reply_to_message.message_id)  # –°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        bot.send_message(
            message.chat.id,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

# # ===============================================
# # =============== –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞ ===============
# # ===============================================

# def process_reject_reason(message):
#     try:
#         user_id = message.from_user.id
#         if user_id not in reject_reason_data:
#             return
#
#         # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
#         if not message.reply_to_message or message.reply_to_message.from_user.id != bot.get_me().id:
#             # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç
#             try:
#                 bot.delete_message(message.chat.id, message.message_id)
#             except:
#                 pass
#
#             # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
#             msg = bot.send_message(
#                 message.chat.id,
#                 "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É '–û—Ç–≤–µ—Ç–∏—Ç—å' –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.",
#                 reply_to_message_id=reject_reason_data[user_id]['message_id']
#             )
#             bot.register_next_step_handler(msg, process_reject_reason)
#             return
#
#         data = reject_reason_data[user_id]
#         reason = message.text
#
#         # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
#         update_return_status(data['report_id'], 2, data['user_id'])
#
#         # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
#         status_text = f"\n\n‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
#         new_text = (data['current_text'] or "") + status_text
#
#         # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#         try:
#             bot.edit_message_text(
#                 chat_id=data['chat_id'],
#                 message_id=data['message_id'],
#                 text=new_text,
#                 reply_markup=None
#             )
#         except:
#             try:
#                 bot.edit_message_caption(
#                     chat_id=data['chat_id'],
#                     message_id=data['message_id'],
#                     caption=new_text,
#                     reply_markup=None
#                 )
#             except Exception as e:
#                 print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
#
#         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#         bot.send_message(
#             data['user_id'],
#             f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
#         )
#
#         # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
#         if user_id in reject_reason_data:
#             del reject_reason_data[user_id]
#
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {e}")
#         bot.send_message(
#             message.chat.id,
#             "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏—á–∏–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
#         )


# ===============================================
# =============== –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===============
# ===============================================

# @bot.message_handler(
#     func=lambda message:
#     message.reply_to_message and
#     message.from_user.id in question_data and
#     message.reply_to_message.message_id == question_data[message.from_user.id]["question_message_id"]
# )
# def handle_user_answer(message):
#     try:
#         user_id = message.from_user.id
#         data = question_data.get(user_id)
#
#         if not data:
#             bot.reply_to(message, "‚ùå –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.")
#             return
#
#         # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
#         print(f"–î–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–∞: {data}")
#         print(f"ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–æ–º: {data['question_message_id']}")
#         print(f"ID –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {message.reply_to_message.message_id}")
#
#         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
#         bot.send_message(
#             data['admin_chat_id'],
#             f"üì© –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å:\n\"{data['question']}\"\n\nüí¨ –û—Ç–≤–µ—Ç: {message.text}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
#             reply_to_message_id=data['admin_message_id'],
#             reply_markup=create_decision_keyboard(data['report_id'], user_id)
#         )
#
#         # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–∞
#         if user_id in question_data:
#             del question_data[user_id]
#
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞ –≤ handle_user_answer: {e}")
#         bot.reply_to(message, "‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
#
#
# def create_decision_keyboard(report_id, user_id):
#     markup = types.InlineKeyboardMarkup(row_width=2)
#     approve_button = types.InlineKeyboardButton(
#         "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç",
#         callback_data=f'return_approve_{report_id}_{user_id}'
#     )
#     reject_button = types.InlineKeyboardButton(
#         "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
#         callback_data=f'return_reject_{report_id}_{user_id}'
#     )
#     markup.add(approve_button, reject_button)
#     return markup

# ==================================================
# =============== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ ===============
# ==================================================

def update_return_status(report_id, status, user_id, refund_amount=None):
    try:
        update_data = {"$set": {"returned": status}}
        if refund_amount is not None:
            update_data["$set"]["refund_amount"] = refund_amount

        db.reports.update_one(
            {"id": report_id},
            update_data
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {e}")

# ============================================
# =============== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===============
# ============================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@bot.message_handler(func=lambda message: message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def back_to_menu(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
    CreateReportButton = types.KeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")

    markup.add(WhereMyMoneyButton, CreateReportButton)
    markup.add(HelpWithMoneyButton, ProblemWithStopRent)

    bot.send_message(message.chat.id,
                     '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ¬´Akku-Batt¬ª, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)


# ==============================================
# =============== –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é ===============
# ==============================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "/start"
@bot.message_handler(commands=['start'])
def start_message(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
    CreateReportButton = types.KeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")

    markup.add(WhereMyMoneyButton, CreateReportButton)
    markup.add(HelpWithMoneyButton, ProblemWithStopRent)

    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ —á–∞—Ç-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É ¬´Akku-Batt¬ª. –í —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)


# ============================================
# =============== –ö–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ ===============
# ============================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –ø–æ –∞—Ä–µ–Ω–¥–µ
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_rent_tutorial(message):
    global flag
    flag = False

    tutorial_how_rent_scooter(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ä–µ–Ω–¥—É
@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑a–¥")
def back_to_stop_rent_tutorial(message):
    global flag
    flag = False

    problem_with_stop_rent(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑–∞–¥")
def go_back_install_app(message):
    global flag
    flag = False

    how_to_install_app(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
@bot.message_handler(func=lambda message: message.text == "üîô Ha–∑a–¥")
def go_back_install_to_problem(message):
    global flag
    flag = False

    problem_with_scooter(message)

# =====================================================
# =============== –ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300—Ä ===============
# =====================================================

@bot.message_handler(func=lambda message: message.text == "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
def where_my_money_button(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ReturnDidNotArrive = types.KeyboardButton("üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(ReturnDidNotArrive)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, WhereMoneyText,
                     reply_markup=markup)

# ==================================================
# =============== –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç? ===============
# ==================================================

@bot.message_handler(func=lambda message: message.text == "üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
def return_did_not_arrive(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, ReturnDidNotArrivee, reply_markup=markup)

# ======================================================
# =============== –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç ===============
# ======================================================

@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
def tutorial_how_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    TutorialHowInstallAppButton = types.KeyboardButton("üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
    TutorialHowStartRentButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç?")
    WhereGreenZone = types.KeyboardButton("‚ö†Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –¥–ª—è –∫–∞—Ç–∞–Ω–∏—è")
    TutorialHowRideButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(TutorialHowInstallAppButton, TutorialHowStartRentButton)
    markup.add(TutorialHowRideButton, WhereGreenZone)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# ==========================================================
# =============== –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ? ===============
# ==========================================================

@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
def how_to_install_app(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentTutorial = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
    markup.add(BackToRentTutorial, BackToMainMenuButton)

    bot.send_message(message.chat.id, RegistrationTutorialText, reply_markup=markup)

# ======================================================
# =============== –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç ===============
# ======================================================

@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç?")
def how_to_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, RentTutorialText, reply_markup=markup)

# =============================================
# =============== –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è? ===============
# =============================================

@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
def how_to_ride_on_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, HowToRideTutorialText, reply_markup=markup)

# ================================================
# =============== –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã ===============
# ================================================

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –¥–ª—è –∫–∞—Ç–∞–Ω–∏—è")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup)

# =====================================================
# =============== –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É ===============
# =====================================================

@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")
def problem_with_stop_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HowToEndRent = types.KeyboardButton("‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
    DontHaveButtonStopRent = types.KeyboardButton("‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(HowToEndRent, DontHaveButtonStopRent)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# ====================================================
# =============== –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å ===============
# ====================================================

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å")
def how_to_end_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, FinishRentManualText,
                     reply_markup=markup)

# ====================================================
# =============== –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É ===============
# ====================================================

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
def how_to_end_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, HowStopRentText,
                     reply_markup=markup)


# ==================================================
# =============== –ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è ===============
# ==================================================

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup
    )

# ===================================================
# =============== –ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏ ===============
# ===================================================

@bot.message_handler(func=lambda message: message.text == "–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏‚ùì")
def did_not_find_the_researched(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: +7(926)013-43-85',
                     reply_markup=markup)

# ==================================================
# =============== –ì–¥–µ –º–æ–∂–Ωo –∫–∞—Ç–∞—Ç—å—Å—è ===============
# ==================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ωo –∫–∞—Ç–∞—Ç—å—Å—è?")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup
    )

# ======================================================
# =============== –°–∞–ºo–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å ===============
# ======================================================

@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –°–∞–ºo–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
def scooter_not_goes(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, ScooterDontWork,
                     reply_markup=markup)

# =====================================================
# =============== C–∞–º–æ–∫–∞—Ç –µ–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ ===============
# =====================================================

@bot.message_handler(func=lambda message: message.text == "üõ¥ C–∞–º–æ–∫–∞—Ç –µ–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ?")
def why_scooter_so_slowly(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, ScooterControlsText, reply_markup=markup)

# ====================================================
# =============== –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º ===============
# ====================================================

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
def problem_with_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ScooterNotGoes = types.KeyboardButton("‚ö†Ô∏è –°–∞–ºo–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
    ScooterIsSoSlowly = types.KeyboardButton("üõ¥ C–∞–º–æ–∫–∞—Ç –µ–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ?")
    INeedReturn = types.KeyboardButton("–ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
    DidNotFindTheSearched = types.KeyboardButton("–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏‚ùì")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(INeedReturn, ScooterNotGoes)
    markup.add(ScooterIsSoSlowly, DidNotFindTheSearched)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# =============================================
# =============== –ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç ===============
# =============================================

@bot.message_handler(func=lambda message: message.text == "–ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
def report(message):
    global flag, photo_process_flag
    flag = True
    photo_process_flag = True

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,
                     "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. \n\n"
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞.",
                     reply_markup=markup)


# =======================================================
# =============== –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–§–æ—Ç–æ) ===============
# =======================================================

@bot.message_handler(content_types=['photo', 'video'])
def handle_media(message):
    global flag, photo_process_flag, processed_media_groups
    if not flag:
        return

    if message.media_group_id is not None:
        if message.media_group_id not in processed_media_groups:
            processed_media_groups[message.media_group_id] = True
            bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ —Å–∞–º–æ–∫–∞—Ç–∞.")
        return
    else:
        processed_media_groups = {}

    if message.content_type == 'video':
        bot.send_message(message.chat.id, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.\n"
                                          "–ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ —Å–∞–º–æ–∫–∞—Ç–∞.")
        return

    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ñ–æ—Ç–æ
        photo_file = bot.get_file(message.photo[-1].file_id)
        photo_path = os.path.join(PHOTOS_DIR, f"{photo_file.file_id}.jpg")

        downloaded_file = bot.download_file(photo_file.file_path)
        with open(photo_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú –ß–ß:–ú–ú)",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)

        photo_process_flag = False

    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")

# =======================================================
# =============== –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–î–∞—Ç–∞) ===============
# =======================================================

def validate_correct_rental_time(rental_time):
    try:
        datetime.strptime(rental_time, "%d.%m %H:%M")
        return True
    except ValueError:
        return False

# =======================================================
# =============== –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–î–∞—Ç–∞) ===============
# =======================================================

def validate_rental_time(rental_time):
    try:
        rental_datetime = datetime.strptime(rental_time, "%d.%m %H:%M")
        now_time = datetime.now()
        rental_datetime = rental_datetime.replace(year=now_time.year)

        if rental_datetime < now_time - timedelta(days=30):
            return False

        return True
    except ValueError:
        return False

# ========================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ ===============
# ========================================================

def process_rental_time(message, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    rental_time = message.text.strip()

    if not validate_correct_rental_time(rental_time):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id,
                         "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú –ß–ß:–ú–ú",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)
        return

    elif not validate_rental_time(rental_time):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id,
                         "–î–∞—Ç–∞ –≤–∞—à–µ–π –∞—Ä–µ–Ω–¥—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ —Ä–∞–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π.\n"
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú –ß–ß:–ú–ú",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä –í–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞", reply_markup=markup)
    bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)

# =========================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å–∞–º–æ–∫–∞—Ç–∞ ===============
# =========================================================

def process_scooter_number(message, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    scooter_number = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
    if not scooter_number.isdigit():
        bot.send_message(message.chat.id,
                         "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –Ω–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞, –¥–ª–∏–Ω–æ–π –≤ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–æ–º–µ—Ä–∞
    if len(scooter_number) != 4:
        bot.send_message(message.chat.id,
                         "–ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)
        return

    # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                     reply_markup=markup)
    bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)


# ==========================================================
# =============== –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–¢–µ–ª–µ—Ñ–æ–Ω) ===============
# ==========================================================

def format_phone_number(phone_number):
    phone_number = phone_number.strip()

    digits = ''.join(c for c in phone_number if c.isdigit())

    if len(digits) == 11:
        if digits.startswith('7'):
            return '+' + digits
        elif digits.startswith('8'):
            return '+7' + digits[1:]
    elif len(digits) == 10:
        return '+7' + digits

    return None

# ==========================================================
# =============== –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–¢–µ–ª–µ—Ñ–æ–Ω) ===============
# ==========================================================

def is_valid_russian_phone_number(phone_number):
    phone_number = phone_number.strip()

    if phone_number.startswith('+7'):
        if len(phone_number) != 12:
            return False
    elif phone_number.startswith(('7', '8')):
        if len(phone_number) != 11:
            return False
    else:
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã - —Ü–∏—Ñ—Ä—ã
    digits = phone_number[1:] if phone_number.startswith('+') else phone_number
    if not digits.isdigit():
        return False

    return True


# =========================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ===============
# =========================================================

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def process_phone_number(message, scooter_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    phone_number = message.text.strip()

    if not is_valid_russian_phone_number(phone_number):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. "
                                          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7XXX..., 7XXX... –∏–ª–∏ 8XXX...",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    formatted_number = format_phone_number(phone_number)
    if not formatted_number:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞. "
                                          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7XXX..., 7XXX... –∏–ª–∏ 8XXX...",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –í–∞—à–µ–π –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è "
                                      "–ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é Akku-Batt.", reply_markup=markup)
    bot.register_next_step_handler(message, process_card_number, scooter_number, formatted_number,
                                   rental_time, photo_path)


# ======================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã ===============
# ======================================================

def process_card_number(message, scooter_number, phone_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    card_number = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
    if not card_number.isdigit():
        bot.send_message(message.chat.id,
                         "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_card_number,
                                       scooter_number, phone_number, rental_time, photo_path)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–æ–º–µ—Ä–∞
    if len(card_number) != 4:
        bot.send_message(message.chat.id,
                         "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_card_number,
                                       scooter_number, phone_number, rental_time, photo_path)
        return

    # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    bot.send_message(message.chat.id,
                     "–û–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É",
                     reply_markup=markup)
    bot.register_next_step_handler(message, process_description,
                                   scooter_number, phone_number, card_number,
                                   rental_time, photo_path)


# ===========================================================
# =============== –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã ===============
# ===========================================================

def process_description(message, scooter_number, phone_number, card_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    description = message.text
    user_id = message.from_user.id

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    try:
        save_report(photo_path, scooter_number, phone_number, card_number, rental_time, description, user_id)

        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –º—ã –ø—Ä–∏–Ω—è–ª–∏ –µ–≥–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n\n"
                                          "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–π–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. "
                                          "–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Å –≤–∞–º–∏ –º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏.\n\n"
                                          "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–∞–º–æ–∫–∞—Ç –∏ –ø–æ–∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏.",
                         reply_markup=markup)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–Ω–æ–≤–∞", reply_markup=markup)


# ========================================================
# =============== –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ===============
# ========================================================

def save_report(photo, scooter_number, phone_number, card_number, rental_time, description, user_id):
    try:
        report_id = get_next_sequence_value("reportid")

        db.reports.insert_one({
            "id": report_id,
            "user_id": int(user_id),
            "photo": photo,
            "rental_time": rental_time,
            "scooter_number": scooter_number,
            "phone_number": phone_number,
            "card_number": card_number,
            "description_of_the_problem": description,
            "sent": 0,
            "returned": 0,
            "created_at": datetime.now()
        })
    except Exception as e:
        raise e


# ===========================================================
# =============== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤–Ω–µ –∑–∞—è–≤–∫–∏ ===============
# ===========================================================

@bot.message_handler(func=lambda message: True)
def handle_unknown_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –≤ –æ—Ç–≤–µ—Ç –≤ —á–∞—Ç–µ —Å –æ—Ç—á–µ—Ç–∞–º–∏
    if message.chat.id == int(CHAT_ID) and not message.reply_to_message:
        return

    if flag == False and photo_process_flag == False:
        if message.text not in ["–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì",
                                "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì",
                                "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì",
                                "–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì",
                                "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]:
            bot.send_message(message.chat.id,
                             "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.")


# ===========================================
# =============== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===============
# ===========================================

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.remove_webhook()
    time.sleep(1)
    bot.infinity_polling()

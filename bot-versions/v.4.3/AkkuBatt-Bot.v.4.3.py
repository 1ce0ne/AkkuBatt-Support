import telebot
import sqlite3
import os
import threading
import time
import re
import pytz
from datetime import datetime, timedelta
from telebot import types
from flask import Flask, Response
from apscheduler.schedulers.background import BackgroundScheduler

# =====================================================================================================================

API_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')
BUG_AND_FEEDBACK_ID = os.environ.get('REPORTS_CHAT_ID')
DATABASE = os.environ.get('DATABASE_PATH', 'Reports.db')
BUGS_DB = os.environ.get('BUGS_DB_PATH', 'BugReports.db')
FEEDBACK_DB = os.environ.get('FEEDBACK_DB_PATH', 'Feedback.db')
PHOTOS_DIR = os.environ.get('PHOTOS_DIR', 'photos')


bot = telebot.TeleBot(API_TOKEN, threaded=True)

# =====================================================================================================================

app = Flask(__name__)

# Health check endpoint
@app.route('/health', methods=['GET'])
def health_check():
    return Response("OK", status=200)

# –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def run_flask():
    app.run(host='0.0.0.0', port=5000)

flask_thread = threading.Thread(target=run_flask)
flask_thread.start()

# =====================================================================================================================
# =====================================================================================================================

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–æ–≤
flag = False
photo_process_flag = False
last_media_group_id = None
processed_media_groups = {}
reject_reason_data = {}
bug_report_states = {}
feedback_states = {}


# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ /photos
if not os.path.exists(PHOTOS_DIR):
    os.makedirs(PHOTOS_DIR)

# =====================================================================================================================
# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ —Å —Ñ–æ—Ç–æ
def clean_photos_dir():
    try:
        now = datetime.now(pytz.timezone('Europe/Moscow'))
        print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ photos –≤ {now.strftime('%Y-%m-%d %H:%M:%S')}")

        for filename in os.listdir(PHOTOS_DIR):
            file_path = os.path.join(PHOTOS_DIR, filename)
            try:
                if os.path.isfile(file_path):
                    os.unlink(file_path)
                    print(f"–£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")

        print("–û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ photos –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–∫–∏ photos: {e}")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤ 00:00 –ø–æ –ú–°–ö
scheduler = BackgroundScheduler(timezone=pytz.timezone('Europe/Moscow'))
scheduler.add_job(clean_photos_dir, 'cron', hour=0, minute=0)
scheduler.start()

# =====================================================================================================================
# =====================================================================================================================

# –°–æ–æ–±—â–µ–Ω–∏—è
RegistrationTutorialText = (
    '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–∫–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´Akku-Batt¬ª –Ω–∞ —Å–≤–æ–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω.\n\n'

    '1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n'
    '   - –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üì±\n'
    '   - –ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n'
    '     ‚Ä¢ App Store\n'
    '     ‚Ä¢ RuStore\n'
    '     ‚Ä¢ APK-—Ñ–∞–π–ª —Å —Å–∞–π—Ç–∞ akku-batt.ru\n\n'

    '2) –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏:\n'
    '   - –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å:\n'
    '     ‚Ä¢ –ü—Ä–∞–≤–∏–ª–∞–º–∏ –æ—Ñ–µ—Ä—Ç—ã üìÑ\n'
    '     ‚Ä¢ –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n'
    '   - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤–∞–º 18+\n\n'

    '3) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å:\n'
    '   - –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ ‚úèÔ∏è\n\n'

    '4) –ü—Ä–∏–≤—è–∂–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É:\n'
    '   - –î–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–µ–∑–¥–æ–∫ üí≥'
)

# =====================================================================================================================

RentTutorialText = (
    '–î–ª—è –∞—Ä–µ–Ω–¥—ã —Å–∞–º–æ–∫–∞—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏:\n\n'

    '1) –ù–∞—á–∞–ª–æ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –ù–∞–π–¥–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π üó∫Ô∏è\n'
    '   - –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞ –∏–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n\n'

    '2) –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ\n'
    '   - –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É"\n'
    '   - –î–æ–∂–¥–∏—Ç–µ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (—ç–∫—Ä–∞–Ω —Å–∞–º–æ–∫–∞—Ç–∞ –∑–∞–≥–æ—Ä–∏—Ç—Å—è) üîÑ\n\n'

    '3) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–º–æ–∫–∞—Ç–∞:\n'
    '   - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è üëÄ\n'
    '   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Ç–æ—Ä–º–æ–∑–æ–≤\n\n'

    '4) –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã:\n'
    '   - –û—Å—Ç–∞–≤—å—Ç–µ –Ω–∞ –æ—Ç–º–µ—á–µ–Ω–Ω–æ–π –ø–∞—Ä–∫–æ–≤–∫–µ üÖø\n'
    '   - –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∞—á–µ —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è\n\n'

    '–ü—Ä–∏—è—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏! üõ¥üí®'
)

# =====================================================================================================================

HowToRideTutorialText = (
    '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∞–º–æ–∫–∞—Ç–∞:\n\n'

    '1) –ù–∞—á–∞–ª–æ –¥–≤–∏–∂–µ–Ω–∏—è:\n'
    '   - –°–Ω–∏–º–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç —Å –ø–æ–¥–Ω–æ–∂–∫–∏ –ø–ª–∞–≤–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –≤–ø–µ—Ä–µ–¥\n'
    '   - –í—Å—Ç–∞–Ω—å—Ç–µ –æ–¥–Ω–æ–π –Ω–æ–≥–æ–π –Ω–∞ –¥–µ–∫—É\n'
    '   - –¢–æ–ª–∫–Ω–∏—Ç–µ—Å—å –¥—Ä—É–≥–æ–π –Ω–æ–≥–æ–π\n'
    '   - –ü–ª–∞–≤–Ω–æ –Ω–∞–∂–º–∏—Ç–µ —Ä—É—á–∫—É –≥–∞–∑–∞ –ø–æ–¥ –±–æ–ª—å—à–∏–º –ø–∞–ª—å—Ü–µ–º –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏ üëÜ\n\n'

    '2) –°–º–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤:\n'
    '   - –î–≤–∞–∂–¥—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üîÑ\n'
    '   - –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:\n'
    '     ‚Ä¢ –≠–∫–æ üå±\n'
    '     ‚Ä¢ –î—Ä–∞–π–≤ üöÄ\n'
    '     ‚Ä¢ –°–ø–æ—Ä—Ç ‚ö°\n\n'

    '3) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞—Ä—ë–º:\n'
    '   - –ù–∞–∂–º–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ üí°\n\n'

    '‚ö† –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ:\n'
    '   - –í–∫–ª—é—á–∞—Ç—å —Ñ–∞—Ä—ã –≤ —Ç—ë–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ üåô\n'
    '   - –°–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n'

    '–ñ–µ–ª–∞–µ–º –≤–∞–º –ø—Ä–∏—è—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏! üòä'
)

# =====================================================================================================================

WhereMoneyText = (
    '–ö–æ–≥–¥–∞ –≤—ã –±–µ—Ä–µ—Ç–µ —Å–∞–º–æ–∫–∞—Ç –≤ –∞—Ä–µ–Ω–¥—É, —Å –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è 300 —Ä—É–±–ª–µ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–ª–æ–≥–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏. üí∞\n\n'

    '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ø–∏—Å–∞–Ω–∏–µ:\n'
    '1. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –ø–æ–µ–∑–¥–∫–∏ —Å –∫–∞—Ä—Ç—ã —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã, –∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ª–æ–≥ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è. üîÑ\n'
    '2. –ï—Å–ª–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ–ø–ª–∞—Ç—ã, —Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—É–º–º—ã.\n\n'

    '–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –±–∞–Ω–∫–æ–º –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –¥–≤—É—Ö —Å—É—Ç–æ–∫. ‚è≥\n'
    '‚Äî –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–º–µ—Å—Ç–æ 300 —Ä—É–±–ª–µ–π –≤—ã —É–≤–∏–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏, –∞ –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ã –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω.\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ —Å –±–∞–Ω–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ–º–∏–º–æ –±–ª–æ–∫–∏—Ä—É–µ–º–æ–≥–æ –∑–∞–ª–æ–≥–∞. üí≥'
)

# =====================================================================================================================

HowStopRentText = (
    '–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Ä–µ–Ω–¥—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:\n\n'

    '1. –û—Å—Ç–∞–≤—å—Ç–µ —Å–∞–º–æ–∫–∞—Ç –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤–æ–∫, –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º. üÖøÔ∏è\n'
    '2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n'
    '3. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã, –Ω–∞–∂–∞–≤ –ø–æ—è–≤–∏–≤—à—É—é—Å—è –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n'
    '4. –î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã. ‚úÖ\n\n'

    '–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '‚Äî –ï—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —Å–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å—Å—è. ‚ö†Ô∏è\n'
    '‚Äî –ê—Ä–µ–Ω–¥—É –º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¢–û–õ–¨–ö–û –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤–∫–∞—Ö.\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Å–ø–∏—Å–∞–Ω–∏–π. üì±'
)

# =====================================================================================================================

FinishRentManualText = (
    '–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å" –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ:\n\n'

    '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Å–∞–º–æ–∫–∞—Ç–∞ üõ¥ (—Ç—Ä–µ—Ç—å—è —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, —Å –∫—Ä–∞—Å–Ω–æ–π –ø–æ–º–µ—Ç–∫–æ–π)\n'
    '2. –í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç, –∞—Ä–µ–Ω–¥—É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å\n'
    '3. –ü–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å" - –Ω–∞–∂–º–∏—Ç–µ –µ–µ\n\n'

    '–í–∞–∂–Ω–æ:\n'
    '‚Äî –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã\n\n'
)

# =====================================================================================================================

ScooterDontWork = (
    '–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–∫–∞—Ç–∞ –≤ –∑–æ–Ω–∞—Ö –∫–∞—Ç–∞–Ω–∏—è:\n\n'

    '‚Äî –†–∞–∑—Ä–µ—à–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º ‚úÖ\n'
    '‚Äî –ó–∞–ø—Ä–µ—â–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∞ –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º ‚õî\n\n'

    '–ß—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n'
    '1. –ü—Ä–∏ –≤—ã–µ–∑–¥–µ –∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é –∑–æ–Ω—É –∏–ª–∏ –≤—ä–µ–∑–¥–µ –≤ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—É—é —Å–∞–º–æ–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è\n'
    '2. –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∑–µ–ª–µ–Ω—É—é –∑–æ–Ω—É –∏–ª–∏ –ø–æ–∫–∏–Ω—å—Ç–µ –∫—Ä–∞—Å–Ω—É—é\n'
    '3. –ï—Å–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n'
    '   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n'
    '   ‚Ä¢ –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–∫–æ–Ω–∫—É —Å–∞–º–æ–∫–∞—Ç–∞ üõ¥ (—Ç—Ä–µ—Ç—å—è —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ —Å –∫—Ä–∞—Å–Ω–æ–π –æ—Ç–º–µ—Ç–∫–æ–π)\n'
    '   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–∞–º–æ–∫–∞—Ç –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –µ–≥–æ\n\n'

    '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:\n'
    '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ –∑–æ–Ω –Ω–∞ –∫–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏'
)

# =====================================================================================================================

WhereICanRide = (
    '–ö–∞—Ç–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–æ–Ω–∞—Ö:\n\n'

    '1) –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã:\n'
    '   - –û–±–æ–∑–Ω–∞—á–µ–Ω—ã –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç–µ üó∫Ô∏è\n'
    '   - –ö–∞—Ç–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏—Ö –∑–æ–Ω–∞—Ö\n\n'

    '2) –ü—Ä–∏ –≤—ã–µ–∑–¥–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã:\n'
    '   - –°–∞–º–æ–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è\n'
    '   - –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∑–µ–ª–µ–Ω—É—é –∑–æ–Ω—É\n\n'
)

# =====================================================================================================================

ReturnDidNotArrivee = (
    '–ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ –ø—Ä–∏—à—ë–ª, –∑–Ω–∞—á–∏—Ç, '
    '–Ω–∞ –≤–∞—à–µ–π –∫–∞—Ä—Ç–µ –±—ã–ª–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ üí≥\n\n'
    '–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—ã–ª–∏ –≤–∑—è—Ç—ã –∏–∑ –∑–∞–ª–æ–≥–∞.'
)

# =====================================================================================================================

ScooterControlsText = (
    '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å–∞–º–æ–∫–∞—Ç–∞:\n\n'

    '1) –§–∞—Ä–∞ —Å–∞–º–æ–∫–∞—Ç–∞:\n'
    '   - –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∞ —Ä—É–ª–µ–≤–æ–π –ø–∞–Ω–µ–ª–∏\n'
    '   - –û–¥–∏–Ω–∞—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ - –≤–∫–ª/–≤—ã–∫–ª üí°\n'
    '   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ –¥–µ—Ä–∂–∞—Ç—å —Ñ–∞—Ä—É –≤–∫–ª—é—á–µ–Ω–Ω–æ–π\n\n'

    '2) –†–µ–∂–∏–º—ã –¥–≤–∏–∂–µ–Ω–∏—è:\n'
    '   - –î–æ—Å—Ç—É–ø–Ω—ã 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞:\n'
    '     ‚Ä¢ –≠–∫–æ (—ç–∫–æ–Ω–æ–º–∏—á–Ω—ã–π) üå±\n'
    '     ‚Ä¢ –î—Ä–∞–π–≤ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π) üöÄ\n'
    '     ‚Ä¢ –°–ø–æ—Ä—Ç (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å) ‚ö°\n'
    '   - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–≤–æ–π–Ω—ã–º –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏\n'
    '   - –í—ã–±–∏—Ä–∞–π—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º\n\n'

    '–î–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞—Ä—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫.'
)

# =====================================================================================================================

BugReportAgreement = (
    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –æ–± –æ—à–∏–±–∫–µ (–±–∞–≥–µ)\n\n'

    '1. –¶–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∫–∏:\n'
    '–í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞–º —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å. –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à—É –ø–æ–º–æ—â—å –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ. üöÄ\n\n'

    '2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ç—á—ë—Ç—É:\n'
    '- –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É\n'
    '- –£–∫–∞–∂–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–≤–µ–ª–∏ –∫ –æ—à–∏–±–∫–µ\n'
    '- –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã/–≤–∏–¥–µ–æ üì∏\n'
    '- –£–∫–∞–∂–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–û–°)\n\n'

    '3. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:\n'
    '- –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–∞—Ä–æ–ª–∏, –ø–ª–∞—Ç—ë–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é) üîí\n'
    '- –ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n\n'

    '4. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:\n'
    '- –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à –æ—Ç—á—ë—Ç, –Ω–æ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π\n'
    '- –ü—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏ –º–æ–∂–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –≤–∞—Å, –µ—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã ‚úâÔ∏è\n\n'

    '5. –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞:\n'
    '- –û—Ç–ø—Ä–∞–≤–ª—è—è –æ—Ç—á—ë—Ç, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫\n\n'

    '6. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ:\n'
    '–ù–∞–∂–∏–º–∞—è "–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏", –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ ‚úÖ'
)

# =====================================================================================================================

FeedbackAgreement = (
    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞\n\n'

    '1. –¶–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∫–∏:\n'
    '–ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—à–∏ –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ—Ä–≤–∏—Å–∞! –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ª—É—á—à–µ. üí°\n\n'

    '2. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é:\n'
    '- –ß—ë—Ç–∫–æ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é\n'
    '- –û–±—ä—è—Å–Ω–∏—Ç–µ, –∫–∞–∫ —ç—Ç–æ —É–ª—É—á—à–∏—Ç —Å–µ—Ä–≤–∏—Å\n'
    '- –ü–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ üìä\n\n'

    '3. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:\n'
    '- –ù–µ –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∏–ª–∏ –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üîí\n'
    '- –ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –Ω–æ –Ω–µ –æ–±—è–∑–∞–Ω—ã –µ–≥–æ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å\n\n'

    '4. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:\n'
    '- –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –∏–ª–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ\n'
    '- –ü—Ä–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–¥–µ–∏ –º–æ–∂–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –≤–∞—Å (–µ—Å–ª–∏ –æ—Å—Ç–∞–≤–∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã) ‚úâÔ∏è\n\n'

    '5. –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞:\n'
    '- –û—Ç–ø—Ä–∞–≤–ª—è—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏\n'
    '- –ê–≤—Ç–æ—Ä—Å—Ç–≤–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–∑–Ω–∞–Ω–æ –ø–æ –Ω–∞—à–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é ¬©Ô∏è\n\n'

    '6. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ:\n'
    '–ù–∞–∂–∏–º–∞—è "–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏", –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ ‚úÖ'
)

# =====================================================================================================================
# =====================================================================================================================

# –õ–æ–∫–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
def initialize_db():
    create_base = sqlite3.connect(DATABASE)
    cursor = create_base.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS reports (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            photo TEXT,
            rental_time TEXT,
            scooter_number TEXT,
            phone_number TEXT,
            card_number TEXT,
            description_of_the_problem TEXT,
            sent INTEGER DEFAULT 0,
            returned INTEGER DEFAULT 0
        )
    ''')

    create_base.commit()
    create_base.close()

    # =====================================================================================================================

    bugs_base = sqlite3.connect(BUGS_DB)
    bugs_cursor = bugs_base.cursor()
    bugs_cursor.execute('''
            CREATE TABLE IF NOT EXISTS bug_reports (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                bug_description TEXT,
                steps_to_reproduce TEXT,
                os_info TEXT,
                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                sent INTEGER DEFAULT 0
            )
        ''')
    bugs_base.commit()
    bugs_base.close()

    # =====================================================================================================================

    feedback_base = sqlite3.connect(FEEDBACK_DB)
    feedback_cursor = feedback_base.cursor()
    feedback_cursor.execute('''
            CREATE TABLE IF NOT EXISTS feedback (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                idea_description TEXT,
                improvement_explanation TEXT,
                examples TEXT,
                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                sent INTEGER DEFAULT 0
            )
        ''')
    feedback_base.commit()
    feedback_base.close()

initialize_db()

# =====================================================================================================================

# –ü–∞—Ä—Å–∏–Ω–≥ –±–∞–∑—ã –Ω–∞ –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç—ã
def get_reports():
    try:
        with sqlite3.connect(DATABASE) as parsing_base:
            cursor = parsing_base.cursor()
            cursor.execute("SELECT * FROM reports WHERE sent = 0")
            reports = cursor.fetchall()

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {e}")
        reports = []

    return reports

# =====================================================================================================================

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
def mark_as_sent(report_id):
    try:
        with sqlite3.connect(DATABASE) as check_info:
            cursor = check_info.cursor()
            cursor.execute("UPDATE reports SET sent = 1 WHERE id = ?", (report_id,))
            check_info.commit()

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")

# =====================================================================================================================

def send_reports():
    while True:
        reports = get_reports()
        for report in reports:
            try:
                # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –Ω–∞–º –ø–æ–ª—è (–ø–µ—Ä–≤—ã–µ 10)
                id, user_id, photo, rent_data, scooter_number, phone_number, card_number, description_of_the_problem, sent, returned = report[:10]

                try:
                    with sqlite3.connect(DATABASE) as conn:
                        cursor = conn.cursor()
                        cursor.execute("SELECT COUNT(*) FROM reports WHERE phone_number = ?", (phone_number,))
                        report_count = cursor.fetchone()[0]
                except sqlite3.Error as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç—á–µ—Ç–æ–≤: {e}")
                    report_count = 1

                message = (
                    f"üìù Report: #{id}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                    f"üë§ User ID: {user_id}\n"
                    f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\n"
                    f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—á–µ—Ç–æ–≤ –æ—Ç —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞: {report_count}\n"
                    f"‚è±Ô∏è –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã: {rent_data}\n"
                    f"üõ¥ –ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞: {scooter_number}\n"
                    f"üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card_number}\n"
                    f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {description_of_the_problem}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                )

                try:
                    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
                    markup = types.InlineKeyboardMarkup()
                    approve_button = types.InlineKeyboardButton(
                        "–í–æ–∑–≤—Ä–∞—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω",
                        callback_data=f'return_approve_{id}_{user_id}'
                    )
                    reject_button = types.InlineKeyboardButton(
                        "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É",
                        callback_data=f'return_reject_{id}_{user_id}'
                    )
                    markup.add(approve_button, reject_button)

                    if photo and os.path.isfile(photo):
                        try:
                            with open(photo, 'rb') as photo_file:
                                sent_message = bot.send_photo(
                                    CHAT_ID,
                                    photo_file,
                                    caption=message,
                                    reply_markup=markup
                                )
                                if sent_message.message_id:
                                    mark_as_sent(id)
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {e}")
                            bot.send_message(
                                CHAT_ID,
                                message + f"\n[–§–æ—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: {photo}]",
                                reply_markup=markup
                            )
                            mark_as_sent(id)
                    else:
                        bot.send_message(
                            CHAT_ID,
                            message,
                            reply_markup=markup
                        )
                        mark_as_sent(id)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    continue

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á–µ—Ç–∞: {e}")
                continue

        time.sleep(60)

# =====================================================================================================================

@bot.callback_query_handler(func=lambda call: call.data.startswith('return_'))
def handle_return_decision(call):
    try:
        action, report_id, user_id = call.data.split('_')[1:]
        report_id = int(report_id)
        user_id = int(user_id)

        if action == 'approve':
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –≤–æ–∑–≤—Ä–∞—Ç–∞
            reject_reason_data[call.from_user.id] = {
                'report_id': report_id,
                'user_id': user_id,
                'message_id': call.message.message_id,
                'chat_id': call.message.chat.id,
                'current_text': call.message.caption if call.message.caption else call.message.text
            }

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞
            msg = bot.send_message(
                call.message.chat.id,
                "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
                reply_to_message_id=call.message.message_id
            )

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—É–º–º—ã
            bot.register_next_step_handler(msg, process_refund_amount)

            bot.answer_callback_query(call.id, "–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞")

        elif action == 'reject':
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏—á–∏–Ω—ã
            reject_reason_data[call.from_user.id] = {
                'report_id': report_id,
                'user_id': user_id,
                'message_id': call.message.message_id,
                'chat_id': call.message.chat.id,
                'current_text': call.message.caption if call.message.caption else call.message.text
            }

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
            msg = bot.send_message(
                call.message.chat.id,
                "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
                reply_to_message_id=call.message.message_id
            )

            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–∏—á–∏–Ω—ã
            bot.register_next_step_handler(msg, process_reject_reason)

            bot.answer_callback_query(call.id, "–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")
        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

# –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –ø–æ—Ç–æ–∫–µ
reporting_thread = threading.Thread(target=send_reports)
reporting_thread.start()

# =====================================================================================================================

def process_refund_amount(message):
    try:
        user_id = message.from_user.id
        if user_id not in reject_reason_data:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        if not message.reply_to_message or message.reply_to_message.from_user.id != bot.get_me().id:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç
            try:
                bot.delete_message(message.chat.id, message.message_id)
            except:
                pass

            # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—É–º–º—É
            msg = bot.send_message(
                message.chat.id,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É '–û—Ç–≤–µ—Ç–∏—Ç—å' –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.",
                reply_to_message_id=reject_reason_data[user_id]['message_id']
            )
            bot.register_next_step_handler(msg, process_refund_amount)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞
        try:
            refund_amount = float(message.text.replace(',', '.'))
            if refund_amount <= 0:
                raise ValueError
        except ValueError:
            msg = bot.send_message(
                message.chat.id,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤–æ–∑–≤—Ä–∞—Ç–∞ (—á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0).",
                reply_to_message_id=reject_reason_data[user_id]['message_id']
            )
            bot.register_next_step_handler(msg, process_refund_amount)
            return

        data = reject_reason_data[user_id]

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
        update_return_status(data['report_id'], 1, data['user_id'], refund_amount)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        status_text = f"\n\n‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞\n–°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {refund_amount}‚ÇΩ"
        new_text = (data['current_text'] or "") + status_text

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            bot.edit_message_text(
                chat_id=data['chat_id'],
                message_id=data['message_id'],
                text=new_text,
                reply_markup=None
            )
        except:
            try:
                bot.edit_message_caption(
                    chat_id=data['chat_id'],
                    message_id=data['message_id'],
                    caption=new_text,
                    reply_markup=None
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            data['user_id'],
            f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –æ–¥–æ–±—Ä–µ–Ω–∞. –°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {refund_amount}‚ÇΩ"
        )

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if user_id in reject_reason_data:
            del reject_reason_data[user_id]

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã –≤–æ–∑–≤—Ä–∞—Ç–∞: {e}")
        bot.send_message(
            message.chat.id,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—É–º–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

# =====================================================================================================================

def process_reject_reason(message):
    try:
        user_id = message.from_user.id
        if user_id not in reject_reason_data:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        if not message.reply_to_message or message.reply_to_message.from_user.id != bot.get_me().id:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—Ç–≤–µ—Ç
            try:
                bot.delete_message(message.chat.id, message.message_id)
            except:
                pass

            # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É
            msg = bot.send_message(
                message.chat.id,
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É '–û—Ç–≤–µ—Ç–∏—Ç—å' –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.",
                reply_to_message_id=reject_reason_data[user_id]['message_id']
            )
            bot.register_next_step_handler(msg, process_reject_reason)
            return

        data = reject_reason_data[user_id]
        reason = message.text

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ë–î
        update_return_status(data['report_id'], 2, data['user_id'])

        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        status_text = f"\n\n‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
        new_text = (data['current_text'] or "") + status_text

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            bot.edit_message_text(
                chat_id=data['chat_id'],
                message_id=data['message_id'],
                text=new_text,
                reply_markup=None
            )
        except:
            try:
                bot.edit_message_caption(
                    chat_id=data['chat_id'],
                    message_id=data['message_id'],
                    caption=new_text,
                    reply_markup=None
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            data['user_id'],
            f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}"
        )

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if user_id in reject_reason_data:
            del reject_reason_data[user_id]

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {e}")
        bot.send_message(
            message.chat.id,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏—á–∏–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )

# =====================================================================================================================

def update_return_status(report_id, status, user_id, refund_amount=None):
    try:
        with sqlite3.connect(DATABASE) as conn:
            cursor = conn.cursor()
            cursor.execute("UPDATE reports SET returned = ? WHERE id = ?", (status, report_id))
            conn.commit()

            # # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–¥–ª—è approve)
            # if status == 1 and refund_amount is not None:
            #     bot.send_message(user_id, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –æ–¥–æ–±—Ä–µ–Ω–∞. –°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {refund_amount}‚ÇΩ")
            # elif status == 1:
            #     bot.send_message(user_id, "–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç –æ–¥–æ–±—Ä–µ–Ω–∞")
            # # –î–ª—è reject —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ process_reject_reason —Å –ø—Ä–∏—á–∏–Ω–æ–π

    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: {e}")

# =====================================================================================================================
# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –æ –±–∞–≥–∞—Ö
def get_unsent_bug_reports():
    try:
        with sqlite3.connect(BUGS_DB) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM bug_reports WHERE sent = 0")
            return cursor.fetchall()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –æ –±–∞–≥–∞—Ö: {e}")
        return []

# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ –±–∞–≥–µ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
def mark_bug_report_as_sent(report_id):
    try:
        with sqlite3.connect(BUGS_DB) as conn:
            cursor = conn.cursor()
            cursor.execute("UPDATE bug_reports SET sent = 1 WHERE id = ?", (report_id,))
            conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á–µ—Ç–∞ –æ –±–∞–≥–µ: {e}")

# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –æ –±–∞–≥–∞—Ö
def send_bug_reports():
    while True:
        try:
            reports = get_unsent_bug_reports()
            for report in reports:
                report_id, user_id, bug_description, steps_to_reproduce, os_info, timestamp, sent = report

                message = (
                    f"üìù –ù–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ –±–∞–≥–µ #{report_id}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                    f"üë§ User ID: {user_id}\n"
                    f"üìÖ –î–∞—Ç–∞: {timestamp}\n\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞:\n{bug_description}\n\n"
                    f"üîç –®–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:\n{steps_to_reproduce}\n\n"
                    f"üíª –û–°: {os_info}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                )

                try:
                    bot.send_message(
                        BUG_AND_FEEDBACK_ID,
                        message,
                        parse_mode='Markdown'
                    )
                    mark_bug_report_as_sent(report_id)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –æ –±–∞–≥–µ: {e}")
                    continue

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –æ –±–∞–≥–∞—Ö: {e}")

        time.sleep(60)


# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –æ –±–∞–≥–∞—Ö
bug_reporting_thread = threading.Thread(target=send_bug_reports)
bug_reporting_thread.start()

# =====================================================================================================================
# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
def get_unsent_feedback():
    try:
        with sqlite3.connect(FEEDBACK_DB) as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM feedback WHERE sent = 0")
            return cursor.fetchall()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")
        return []

# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ
def mark_feedback_as_sent(feedback_id):
    try:
        with sqlite3.connect(FEEDBACK_DB) as conn:
            cursor = conn.cursor()
            cursor.execute("UPDATE feedback SET sent = 1 WHERE id = ?", (feedback_id,))
            conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {e}")

# =====================================================================================================================

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
def send_feedback_reports():
    while True:
        try:
            feedbacks = get_unsent_feedback()
            for feedback in feedbacks:
                feedback_id, user_id, idea_description, improvement_explanation, examples, timestamp, sent = feedback

                message = (
                    f"üí° –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #{feedback_id}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                    f"üë§ User ID: {user_id}\n"
                    f"üìÖ –î–∞—Ç–∞: {timestamp}\n\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏:\n{idea_description}\n\n"
                    f"üîÑ –ö–∞–∫ —ç—Ç–æ —É–ª—É—á—à–∏—Ç —Å–µ—Ä–≤–∏—Å:\n{improvement_explanation}\n\n"
                    f"üåê –ü—Ä–∏–º–µ—Ä—ã/–∞–Ω–∞–ª–æ–≥–∏–∏:\n{examples}\n"
                    f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
                )

                try:
                    bot.send_message(
                        BUG_AND_FEEDBACK_ID,
                        message,
                        parse_mode='Markdown'
                    )
                    mark_feedback_as_sent(feedback_id)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {e}")
                    continue

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")

        time.sleep(60)


# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
feedback_thread = threading.Thread(target=send_feedback_reports)
feedback_thread.start()

# =====================================================================================================================
# =====================================================================================================================


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@bot.message_handler(func=lambda message: message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def back_to_menu(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
    CreateReportButton = types.KeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")
    BugsAndSuggestions = types.KeyboardButton("–ë–∞–≥–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è‚ùì")

    markup.add(WhereMyMoneyButton, CreateReportButton)
    markup.add(HelpWithMoneyButton, ProblemWithStopRent)
    markup.add(BugsAndSuggestions)

    bot.send_message(message.chat.id,
                     '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ¬´Akku-Batt¬ª, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "/start"
@bot.message_handler(commands=['start'])
def start_message(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
    CreateReportButton = types.KeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")
    BugsAndSuggestions = types.KeyboardButton("–ë–∞–≥–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è‚ùì")

    markup.add(WhereMyMoneyButton, CreateReportButton)
    markup.add(HelpWithMoneyButton, ProblemWithStopRent)
    markup.add(BugsAndSuggestions)

    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ —á–∞—Ç-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É ¬´Akku-Batt¬ª. –í —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –ø–æ –∞—Ä–µ–Ω–¥–µ
@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_rent_tutorial(message):
    global flag
    flag = False

    tutorial_how_rent_scooter(message)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—Ä–µ–Ω–¥—É
@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑a–¥")
def back_to_stop_rent_tutorial(message):
    global flag
    flag = False

    problem_with_stop_rent(message)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑–∞–¥")
def go_back_install_app(message):
    global flag
    flag = False

    how_to_install_app(message)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥", –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —Ç—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
@bot.message_handler(func=lambda message: message.text == "üîô Ha–∑a–¥")
def go_back_install_to_problem(message):
    global flag
    flag = False

    problem_with_scooter(message)

# =====================================================================================================================
# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "–ë–∞–≥–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è‚ùì")
def bugs_and_suggestions(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ReportBugButton = types.KeyboardButton("–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ")
    ReportSuggestionsButton = types.KeyboardButton("–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(ReportBugButton, ReportSuggestionsButton)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.",
                     reply_markup=markup)

# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "–°–æ–æ–±—â–∏—Ç—å –æ –±–∞–≥–µ")
def report_bug_start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    AgreeButton = types.KeyboardButton("–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏")
    DeclineButton = types.KeyboardButton("–û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—Å–ª–æ–≤–∏—è")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(AgreeButton, DeclineButton)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, BugReportAgreement, reply_markup=markup)

# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏")
def start_bug_report(message):
    bug_report_states[message.from_user.id] = {
        'step': 1,
        'data': {}
    }

    msg = bot.send_message(message.chat.id,
                           "–û–ø–∏—à–∏—Ç–µ –±–∞–≥, —á—Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç –∏ –∫–∞–∫ –º–µ—à–∞–µ—Ç —Ä–∞–±–æ—Ç–µ",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_bug_description)

# =====================================================================================================================

def process_bug_description(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del bug_report_states[user_id]
        back_to_menu(message)
        return

    if user_id not in bug_report_states:
        bug_report_states[user_id] = {'step': 1, 'data': {}}

    bug_report_states[user_id]['data']['bug_description'] = message.text
    bug_report_states[user_id]['step'] = 2

    msg = bot.send_message(message.chat.id,
                           "–ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–ª–∏, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —ç—Ç–æ–≥–æ –±–∞–≥–∞? –ö–∞–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π?",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_steps_to_reproduce)

# =====================================================================================================================

def process_steps_to_reproduce(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del bug_report_states[user_id]
        back_to_menu(message)
        return
      
    if user_id not in bug_report_states:
        bug_report_states[user_id] = {'step': 2, 'data': {}}

    bug_report_states[user_id]['data']['steps_to_reproduce'] = message.text
    bug_report_states[user_id]['step'] = 3

    msg = bot.send_message(message.chat.id,
                           "–ö–∞–∫—É—é –û–° (Android/IOS) –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_os_info)

# =====================================================================================================================

def process_os_info(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del bug_report_states[user_id]
        back_to_menu(message)
        return

    if user_id not in bug_report_states:
        bug_report_states[user_id] = {'step': 3, 'data': {}}

    bug_report_states[user_id]['data']['os_info'] = message.text

    try:
        with sqlite3.connect(BUGS_DB) as conn:
            cursor = conn.cursor()
            cursor.execute('''
                INSERT INTO bug_reports (user_id, bug_description, steps_to_reproduce, os_info)
                VALUES (?, ?, ?, ?)
            ''', (
                user_id,
                bug_report_states[user_id]['data']['bug_description'],
                bug_report_states[user_id]['data']['steps_to_reproduce'],
                bug_report_states[user_id]['data']['os_info']
            ))
            conn.commit()
    except sqlite3.Error as e:
        print(f"Error saving bug report: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    bot.send_message(message.chat.id,
                     "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤ —É–ª—É—á—à–µ–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞!",
                     reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    del bug_report_states[user_id]

# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "–û—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—Å–ª–æ–≤–∏—è")
def decline_bug_report(message):
    bot.send_message(message.chat.id,
                     "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ.",
                     reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
@bot.message_handler(func=lambda message: message.text == "–û—Ç–∑—ã–≤—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
def feedback_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    AgreeButton = types.KeyboardButton("–°o–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏")
    DeclineButton = types.KeyboardButton("O—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—Å–ª–æ–≤–∏—è")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(AgreeButton, DeclineButton)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, FeedbackAgreement, reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–≥–ª–∞—Å–∏—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
@bot.message_handler(func=lambda message: message.text == "–°o–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏")
def start_feedback_process(message):
    feedback_states[message.from_user.id] = {
        'step': 1,
        'data': {}
    }

    msg = bot.send_message(message.chat.id,
                           "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏–¥–µ—é —á—ë—Ç–∫–æ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ.",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_idea_description)

# =====================================================================================================================

def process_idea_description(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del feedback_states[user_id]
        back_to_menu(message)
        return

    if user_id not in feedback_states:
        feedback_states[user_id] = {'step': 1, 'data': {}}

    feedback_states[user_id]['data']['idea_description'] = message.text
    feedback_states[user_id]['step'] = 2

    msg = bot.send_message(message.chat.id,
                           "–û–±—ä—è—Å–Ω–∏—Ç–µ, –∫–∞–∫ —ç—Ç–æ —É–ª—É—á—à–∏—Ç —Å–µ—Ä–≤–∏—Å.",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_improvement_explanation)

# =====================================================================================================================

def process_improvement_explanation(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del feedback_states[user_id]
        back_to_menu(message)
        return

    if user_id not in feedback_states:
        feedback_states[user_id] = {'step': 2, 'data': {}}

    feedback_states[user_id]['data']['improvement_explanation'] = message.text
    feedback_states[user_id]['step'] = 3

    msg = bot.send_message(message.chat.id,
                           "–ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.",
                           reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.register_next_step_handler(msg, process_examples)

# =====================================================================================================================

def process_examples(message):
    user_id = message.from_user.id

    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        del feedback_states[user_id]
        back_to_menu(message)
        return

    if user_id not in feedback_states:
        feedback_states[user_id] = {'step': 3, 'data': {}}

    feedback_states[user_id]['data']['examples'] = message.text

    try:
        with sqlite3.connect(FEEDBACK_DB) as conn:
            cursor = conn.cursor()
            cursor.execute('''
                INSERT INTO feedback (user_id, idea_description, improvement_explanation, examples)
                VALUES (?, ?, ?, ?)
            ''', (
                user_id,
                feedback_states[user_id]['data']['idea_description'],
                feedback_states[user_id]['data']['improvement_explanation'],
                feedback_states[user_id]['data']['examples']
            ))
            conn.commit()
    except sqlite3.Error as e:
        print(f"Error saving feedback: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    bot.send_message(message.chat.id,
                     "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à –≤–∫–ª–∞–¥ –≤ —É–ª—É—á—à–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞.",
                     reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    del feedback_states[user_id]

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–∞–∑–∞ –æ—Ç —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
@bot.message_handler(func=lambda message: message.text == "O—Ç–∫–∞–∑—ã–≤–∞—é—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—Å–ª–æ–≤–∏—è")
def decline_feedback(message):
    bot.send_message(message.chat.id,
                     "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.",
                     reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

# =====================================================================================================================
# =====================================================================================================================


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300 —Ä—É–±–ª–µ–π?"
@bot.message_handler(func=lambda message: message.text == "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì")
def where_my_money_button(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ReturnDidNotArrive = types.KeyboardButton("üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(ReturnDidNotArrive)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, WhereMoneyText,
                     reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?"
@bot.message_handler(func=lambda message: message.text == "üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
def return_did_not_arrive(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, ReturnDidNotArrivee, reply_markup=markup)

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç?"
@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
def tutorial_how_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    TutorialHowInstallAppButton = types.KeyboardButton("üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
    TutorialHowStartRentButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç?")
    WhereGreenZone = types.KeyboardButton("‚ö†Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –¥–ª—è –∫–∞—Ç–∞–Ω–∏—è")
    TutorialHowRideButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(TutorialHowInstallAppButton, TutorialHowStartRentButton)
    markup.add(TutorialHowRideButton, WhereGreenZone)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?"
@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
def how_to_install_app(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentTutorial = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
    markup.add(BackToRentTutorial, BackToMainMenuButton)

    bot.send_message(message.chat.id, RegistrationTutorialText, reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –≤–∑—è—Ç—å –≤ –∞—Ä–µ–Ω–¥—É —Å–∞–º–æ–∫–∞—Ç?"
@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç?")
def how_to_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, RentTutorialText, reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?"
@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
def how_to_ride_on_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, HowToRideTutorialText, reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –¥–ª—è –∫–∞—Ç–∞–Ω–∏—è")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup
    )
# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–µ –º–æ–≥—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å?"
@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì")
def problem_with_stop_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HowToEndRent = types.KeyboardButton("‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
    DontHaveButtonStopRent = types.KeyboardButton("‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(HowToEndRent, DontHaveButtonStopRent)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ù–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å")
def how_to_end_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, FinishRentManualText,
                     reply_markup=markup)

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
def how_to_end_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, HowStopRentText,
                     reply_markup=markup)


# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup
    )

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏?"
@bot.message_handler(func=lambda message: message.text == "–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏‚ùì")
def did_not_find_the_researched(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: +7(926)013-43-85',
                     reply_markup=markup)

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ωo –∫–∞—Ç–∞—Ç—å—Å—è?")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(
        message.chat.id, WhereICanRide, reply_markup=markup
    )

# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–∞–º–æ–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å"
@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –°–∞–ºo–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
def scooter_not_goes(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, ScooterDontWork,
                     reply_markup=markup)

# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "üõ¥ C–∞–º–æ–∫–∞—Ç –µ–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ?")
def why_scooter_so_slowly(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô Ha–∑a–¥")

    markup.add(BackToRentMenuButton, BackToMainMenuButton)

    bot.send_message(message.chat.id, ScooterControlsText, reply_markup=markup)

# =====================================================================================================================

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì")
def problem_with_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ScooterNotGoes = types.KeyboardButton("‚ö†Ô∏è –°–∞–ºo–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
    ScooterIsSoSlowly = types.KeyboardButton("üõ¥ C–∞–º–æ–∫–∞—Ç –µ–¥–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ?")
    INeedReturn = types.KeyboardButton("–ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
    DidNotFindTheSearched = types.KeyboardButton("–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏‚ùì")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(INeedReturn, ScooterNotGoes)
    markup.add(ScooterIsSoSlowly, DidNotFindTheSearched)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç?", –Ω–∞—á–∞–ª–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
@bot.message_handler(func=lambda message: message.text == "–ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
def report(message):
    global flag, photo_process_flag
    flag = True
    photo_process_flag = True 

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. \n\n"
                                      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞.",
                     reply_markup=markup)

# =====================================================================================================================

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
@bot.message_handler(content_types=['photo', 'video'])
def handle_media(message):
    global flag, photo_process_flag, processed_media_groups
    if not flag:
        return

    if message.media_group_id is not None:
        if message.media_group_id not in processed_media_groups:
            processed_media_groups[message.media_group_id] = True
            bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ —Å–∞–º–æ–∫–∞—Ç–∞.")
        return
    else:
        processed_media_groups = {}

    if message.content_type == 'video':
        bot.send_message(message.chat.id, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ.\n"
                                          "–ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Ñ–æ—Ç–æ —Å–∞–º–æ–∫–∞—Ç–∞.")
        return

    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Ñ–æ—Ç–æ
        photo_file = bot.get_file(message.photo[-1].file_id)
        photo_path = os.path.join(PHOTOS_DIR, f"{photo_file.file_id}.jpg")

        downloaded_file = bot.download_file(photo_file.file_path)
        with open(photo_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú –ß–ß:–ú–ú)",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)

        photo_process_flag = False

    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")

# =====================================================================================================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è)
def validate_correct_rental_time(rental_time):
    try:
        datetime.strptime(rental_time, "%d.%m %H:%M")
        return True

    except ValueError:
        return False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–ù–∞—Å–∫–æ–ª—å–∫–æ –¥–∞–≤–Ω–æ –±—ã–ª–∞ –¥–∞—Ç–∞)
def validate_rental_time(rental_time):
    try:
        rental_datetime = datetime.strptime(rental_time, "%d.%m %H:%M")
        now_time = datetime.now()
        rental_datetime = rental_datetime.replace(year=now_time.year)

        if rental_datetime < now_time - timedelta(days=30):
            return False

        return True
    except ValueError:
        return False

# =====================================================================================================================

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
def process_rental_time(message, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    rental_time = message.text.strip()

    if not validate_correct_rental_time(rental_time):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id,
                         "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú –ß–ß:–ú–ú",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)
        return

    elif not validate_rental_time(rental_time):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id,
                         "–î–∞—Ç–∞ –≤–∞—à–µ–π –∞—Ä–µ–Ω–¥—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ —Ä–∞–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ —á–µ–º —á–µ—Ä–µ–∑ 30 –¥–Ω–µ–π.\n"
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú –ß–ß:–ú–ú",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä –í–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞", reply_markup=markup)
    bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)

# =====================================================================================================================

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ù–æ–º–µ—Ä–∞ —Å–∞–º–æ–∫–∞—Ç–∞
def process_scooter_number(message, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    scooter_number = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
    if not scooter_number.isdigit():
        bot.send_message(message.chat.id,
                         "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –Ω–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞, –¥–ª–∏–Ω–æ–π –≤ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–æ–º–µ—Ä–∞
    if len(scooter_number) != 4:
        bot.send_message(message.chat.id,
                         "–ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)
        return

    # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                     reply_markup=markup)
    bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)

# =====================================================================================================================

def format_phone_number(phone_number):
    phone_number = phone_number.strip()

    if phone_number.startswith('+7'):
        # –£–±–∏—Ä–∞–µ–º + –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É
        formatted = '8' + phone_number[2:]
    elif phone_number.startswith('7'):
        # –ó–∞–º–µ–Ω—è–µ–º 8 –Ω–∞ 7
        formatted = '8' + phone_number[1:]
    elif phone_number.startswith('8'):
        # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
        formatted = phone_number
    else:
        return None

    if len(formatted) == 11 and formatted.isdigit():
        return formatted
    return None

# =====================================================================================================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
def is_valid_russian_phone_number(phone_number):
    phone_number = phone_number.strip()

    if phone_number.startswith('+7'):
        if len(phone_number) != 12:
            return False
    elif phone_number.startswith(('7', '8')):
        if len(phone_number) != 11:
            return False
    else:
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã - —Ü–∏—Ñ—Ä—ã
    digits = phone_number[1:] if phone_number.startswith('+') else phone_number
    if not digits.isdigit():
        return False

    return True

# =====================================================================================================================

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def process_phone_number(message, scooter_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    phone_number = message.text.strip()

    if not is_valid_russian_phone_number(phone_number):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. "
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7XXX..., 7XXX... –∏–ª–∏ 8XXX...",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)
        return

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä
    formatted_number = format_phone_number(phone_number)
    if not formatted_number:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞. "
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7XXX..., 7XXX... –∏–ª–∏ 8XXX...",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –í–∞—à–µ–π –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è "
                     "–ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é Akku-Batt.", reply_markup=markup)
    bot.register_next_step_handler(message, process_card_number, scooter_number, formatted_number,
                                 rental_time, photo_path)

# =====================================================================================================================

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã (–ü–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã)
def process_card_number(message, scooter_number, phone_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    card_number = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
    if not card_number.isdigit():
        bot.send_message(message.chat.id,
                        "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                        reply_markup=markup)
        bot.register_next_step_handler(message, process_card_number,
                                     scooter_number, phone_number, rental_time, photo_path)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–æ–º–µ—Ä–∞
    if len(card_number) != 4:
        bot.send_message(message.chat.id,
                        "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Ü–∏—Ñ—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                        reply_markup=markup)
        bot.register_next_step_handler(message, process_card_number,
                                     scooter_number, phone_number, rental_time, photo_path)
        return

    # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    bot.send_message(message.chat.id,
                    "–û–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É",
                    reply_markup=markup)
    bot.register_next_step_handler(message, process_description,
                                 scooter_number, phone_number, card_number,
                                 rental_time, photo_path)

# =====================================================================================================================

def process_description(message, scooter_number, phone_number, card_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    description = message.text
    user_id = message.from_user.id

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    try:
        save_report(photo_path, scooter_number, phone_number, card_number, rental_time, description, user_id)

        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –º—ã –ø—Ä–∏–Ω—è–ª–∏ –µ–≥–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n\n"
                                          "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø—Ä–æ–π–¥–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —Ç—Ä—ë—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. "
                                          "–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Å –≤–∞–º–∏ –º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è –Ω–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏.\n\n"
                                          "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–∞–º–æ–∫–∞—Ç –∏ –ø–æ–∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏.",
                         reply_markup=markup)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–Ω–æ–≤–∞", reply_markup=markup)


# =====================================================================================================================

def save_report(photo, scooter_number, phone_number, card_number, rental_time, description, user_id):
    conn = None
    try:
        conn = sqlite3.connect(DATABASE)
        cursor = conn.cursor()

        cursor.execute('''
            INSERT INTO reports (
                photo, 
                scooter_number, 
                phone_number, 
                card_number, 
                rental_time, 
                description_of_the_problem,
                user_id
            )
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (photo, scooter_number, phone_number, card_number, rental_time, description, user_id))

        conn.commit()
    except Exception as e:
        raise e
    finally:
        if conn:
            conn.close()

# =====================================================================================================================
# =====================================================================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_unknown_message(message):

    if flag == False and photo_process_flag == False:
        if message.text not in ["–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì",
                                "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300‚ÇΩ‚ùì",
                                "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–º–æ–∫–∞—Ç–æ–º‚ùì",
                                "–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–µ–∑–¥–∫—É‚ùì",
                                "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]:
            bot.send_message(message.chat.id,
                             "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.")

# =====================================================================================================================
# =====================================================================================================================

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.remove_webhook()
    time.sleep(1)
    bot.infinity_polling()

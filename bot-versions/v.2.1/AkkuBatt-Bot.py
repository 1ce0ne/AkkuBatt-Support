import telebot
from telebot import types
import sqlite3
import os
import threading
import time
import re

flag = False

API_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')
CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')
DATABASE = os.environ.get('DATABASE_PATH', 'Reports.db')
PHOTOS_DIR = os.environ.get('PHOTOS_DIR', 'photos')

bot = telebot.TeleBot(API_TOKEN, threaded=True)

RegistrationTutorialText = ('–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–º–æ–∫–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´Akku-Batt¬ª –Ω–∞ —Å–≤–æ–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω.\n\n'
                            '1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ QR-–∫–æ–¥ –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ–π–¥—è –Ω–∞ —Å–∞–π—Ç: https://akku-batt.rent.\n'
                            '2) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –≤–≤–µ–¥—è —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ.\n'
                            '3) –ü—Ä–∏–≤—è–∂–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã.\n')

RentTutorialText = ('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∑—è—Ç—å —Å–∞–º–æ–∫–∞—Ç –≤ –∞—Ä–µ–Ω–¥—É:\n\n'
                    '1) –ù–∞–π–¥–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π —Å–∞–º–æ–∫–∞—Ç: –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n'
                    '2) –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–π—Å—è —Å–∞–º–æ–∫–∞—Ç: –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä –∏–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥.\n'
                    '3) –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ: –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –∞—Ä–µ–Ω–¥—É".\n'
                    '4) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–º–æ–∫–∞—Ç: –û—Å–º–æ—Ç—Ä–∏—Ç–µ –µ–≥–æ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ—Ä–º–æ–∑–∞ –¥–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n'
                    '5) –ñ–¥–∏—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —ç–∫—Ä–∞–Ω —Å–∞–º–æ–∫–∞—Ç–∞ –∑–∞–≥–æ—Ä–∏—Ç—Å—è.\n\n'
                    '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤–∞–º –ø—É—Ç–∏!')

HowToRideTutorialText = ('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∞–º–æ–∫–∞—Ç–∞:\n\n'
                         '1) –°–Ω–∏–º–∏—Ç–µ —Å–∞–º–æ–∫–∞—Ç —Å –ø–æ–¥–Ω–æ–∂–∫–∏ –ø–ª–∞–≤–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –≤–ø–µ—Ä—ë–¥.\n'
                         '2) –¢–æ–ª–∫–Ω–∏—Ç–µ—Å—å –æ–¥–Ω–æ–π –Ω–æ–≥–æ–π –∏ –∑–∞–∂–º–∏—Ç–µ —Ä—É—á–∫—É –≥–∞–∑–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ.\n'
                         '3) –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç–Ω—ã–µ —Ä–µ–∂–∏–º—ã, –¥–≤–∞–∂–¥—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º —Ä–µ–∂–∏–º:\n'
                         '- –≠–∫–æ\n'
                         '- –î—Ä–∞–π–≤\n'
                         '- –°–ø–æ—Ä—Ç\n'
                         '4) –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —Ñ–æ–Ω–∞—Ä—å, –Ω–∞–∂–º–∏—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å–∞–º–æ–∫–∞—Ç–µ.\n\n'
                         'Ô∏è–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –≤–∫–ª—é—á–∞—Ç—å —Ñ–∞—Ä—ã –≤ —Ç—ë–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –¥–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!')


def is_valid_russian_phone_number(phone_number):
    pattern = re.compile(r'^(?:\+7|8|7)?\d{10}$')
    return bool(pattern.match(phone_number))


def initialize_db():
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS reports (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            photo TEXT,
            rental_time TEXT,
            scooter_number TEXT,
            phone_number TEXT,
            card_number TEXT,
            description_of_the_problem TEXT,
            sent INTEGER DEFAULT 0
        )
    ''')

    conn.commit()
    conn.close()


@bot.message_handler(func=lambda message: message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
def back_to_menu(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300 —Ä—É–±–ª–µ–π‚ùì")
    CreateReportButton = types.KeyboardButton("–°–ª–æ–º–∞–ª—Å—è —Å–∞–º–æ–∫–∞—Ç? –ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ù–µ –º–æ–≥—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å‚ùì")

    markup.add(HelpWithMoneyButton)
    markup.add(WhereMyMoneyButton)
    markup.add(CreateReportButton)
    markup.add(ProblemWithStopRent)

    bot.send_message(message.chat.id,
                     '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ¬´Akku-Batt¬ª, –≤—ã–±–µ—Ä–∏—Ç–µ –≤ —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
def back_to_rent_tutorial(message):
    global flag
    flag = False

    tutorial_how_rent_scooter(message)


@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑a–¥")
def back_to_stop_rent_tutorial(message):
    global flag
    flag = False

    problem_with_stop_rent(message)


def ensure_photos_directory():
    if not os.path.exists(PHOTOS_DIR):
        os.makedirs(PHOTOS_DIR)


def get_reports():
    try:
        conn = sqlite3.connect(DATABASE)
        cursor = conn.cursor()

        cursor.execute("SELECT * FROM reports WHERE sent = 0")
        reports = cursor.fetchall()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–æ–≤: {e}")
        reports = []
    finally:
        conn.close()

    return reports


def mark_as_sent(report_id):
    try:
        conn = sqlite3.connect(DATABASE)
        cursor = conn.cursor()
        cursor.execute("UPDATE reports SET sent = 1 WHERE id = ?", (report_id,))
        conn.commit()
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
    finally:
        conn.close()


def send_reports():
    while True:
        reports = get_reports()
        for report in reports:
            id, photo, rent_data, scooter_number, phone_number, card_number, description_of_the_problem, _ = report

            message = (
                f"Report: #{id}\n"
                f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã: {rent_data}\n"
                f"–ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞: {scooter_number}\n"
                f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\n"
                f"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {card_number}\n"
                f"–û–ø–∏—Å–∞–Ω–∏–µ: {description_of_the_problem}"
            )

            try:
                if photo and os.path.isfile(photo):
                    with open(photo, 'rb') as photo_file:
                        bot.send_photo(CHAT_ID, photo_file, caption=message)
                else:
                    bot.send_message(CHAT_ID, message)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            mark_as_sent(id)

        time.sleep(60)


reporting_thread = threading.Thread(target=send_reports)
reporting_thread.start()


@bot.message_handler(commands=['start'])
def start_message(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HelpWithMoneyButton = types.KeyboardButton("–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
    WhereMyMoneyButton = types.KeyboardButton("–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300 —Ä—É–±–ª–µ–π‚ùì")
    CreateReportButton = types.KeyboardButton("–°–ª–æ–º–∞–ª—Å—è —Å–∞–º–æ–∫–∞—Ç? –ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
    ProblemWithStopRent = types.KeyboardButton("–ù–µ –º–æ–≥—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å‚ùì")

    markup.add(HelpWithMoneyButton)
    markup.add(WhereMyMoneyButton)
    markup.add(CreateReportButton)
    markup.add(ProblemWithStopRent)

    bot.send_message(message.chat.id,
                     '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ —á–∞—Ç-–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É ¬´Akku-Batt¬ª. –í —á–µ–º –í–∞–º –Ω—É–∂–Ω–æ –ø–æ–º–æ—á—å?',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ü–æ—á–µ–º—É —Å–ø–∏—Å–∞–ª–æ—Å—å 300 —Ä—É–±–ª–µ–π‚ùì")
def where_my_money_button(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ReturnDidNotArrive = types.KeyboardButton("üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(ReturnDidNotArrive)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,
                     '–ü—Ä–∏ –∞—Ä–µ–Ω–¥–µ —Å–∞–º–æ–∫–∞—Ç–∞ —Å –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã —Å–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∑–∞–ª–æ–≥ –≤ 300 —Ä—É–±–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω—ë—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –ø–æ–µ–∑–¥–∫–∏.\n\n'
                     '–ò–Ω–æ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—Ç –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫.',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üí∏ –ù–µ –ø—Ä–∏—à—ë–ª –≤–æ–∑–≤—Ä–∞—Ç?")
def return_did_not_arrive(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,
                     '–ï—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ –ø—Ä–∏—à—ë–ª, –∑–Ω–∞—á–∏—Ç, –Ω–∞ –≤–∞—à–µ–π –∫–∞—Ä—Ç–µ –±—ã–ª–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–∞–º–∏ —Ç–∞—Ä–∏—Ñ–∞.\n\n'
                     '–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –∫–∞—Ç–∞–Ω–∏—è –±—ã–ª–∏ –≤–∑—è—Ç—ã –∏–∑ —ç—Ç–æ–≥–æ –∑–∞–ª–æ–≥–∞.',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ö–∞–∫ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —Å–∞–º–æ–∫–∞—Ç‚ùì")
def tutorial_how_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    TutorialHowInstallAppButton = types.KeyboardButton("üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
    TutorialHowStartRentButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –≤–∑—è—Ç—å –≤ –∞—Ä–µ–Ω–¥—É —Å–∞–º–æ–∫–∞—Ç?")
    TutorialHowRideButton = types.KeyboardButton("üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(TutorialHowInstallAppButton)
    markup.add(TutorialHowStartRentButton)
    markup.add(TutorialHowRideButton)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?")
def how_to_install_app(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    DidNotFindTheSearched = types.KeyboardButton("–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏?")
    BackToRentTutorial = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(DidNotFindTheSearched)
    markup.add(BackToRentTutorial)

    bot.send_message(message.chat.id, RegistrationTutorialText, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üîô –ùa–∑–∞–¥")
def go_back_install_app(message):
    global flag
    flag = False

    how_to_install_app(message)


@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –≤–∑—è—Ç—å –≤ –∞—Ä–µ–Ω–¥—É —Å–∞–º–æ–∫–∞—Ç?")
def how_to_rent_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    DidNotFindTheSearched = types.KeyboardButton("–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏?")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
    markup.add(DidNotFindTheSearched)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, RentTutorialText, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–µ –º–æ–≥—É –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å‚ùì")
def problem_with_stop_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    HowToEndRent = types.KeyboardButton("‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
    WhereYouCanRide = types.KeyboardButton("‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?")
    ScooterNotGoes = types.KeyboardButton("‚ö†Ô∏è –°–∞–º–æ–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    markup.add(HowToEndRent)
    markup.add(WhereYouCanRide)
    markup.add(ScooterNotGoes)
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id,
                     '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É?")
def how_to_end_rent(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    iAlreadyInTheBlueZone = types.KeyboardButton("–Ø —É–∂–µ –≤ —Å–∏–Ω–µ–π –∑–æ–Ω–µ")
    BackToMainMenuButton = types.KeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(iAlreadyInTheBlueZone)
    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É —Å–∞–º–æ–∫–∞—Ç–∞, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –≤ –∑–æ–Ω—ã, '
                                      '–æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º –Ω–∞ –∫–∞—Ä—Ç–µ.\n\n'
                                      '–ü–æ–∫–∞ –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ —ç—Ç–∏—Ö –∑–æ–Ω, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º.',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–Ø —É–∂–µ –≤ —Å–∏–Ω–µ–π –∑–æ–Ω–µ")
def i_already_in_the_blue_zone(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id,
                     '–ï—Å–ª–∏ –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–∏–Ω–µ–π –∑–æ–Ω–µ, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n\n'
                     '1. –ó–∞–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n'
                     '2. –í –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ –Ω–∞–π–¥–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É —Å –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–º–∏ –í–∞–º–∏ —Å–∞–º–æ–∫–∞—Ç–∞–º–∏.\n'
                     '3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –≤–∫–ª–∞–¥–∫—É.\n'
                     '4. –î–∞–ª–µ–µ, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É¬ª.', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –ì–¥–µ –º–æ–∂–Ω–æ –∫–∞—Ç–∞—Ç—å—Å—è?")
def where_you_can_ride(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, '–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –∫–∞—Ä—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º.\n\n'
                                      '–ï—Å–ª–∏ –≤—ã –ø–æ–∫–∏–¥–∞–µ—Ç–µ –≥—Ä–∞–Ω–∏—Ü—ã —ç—Ç–æ–π –∑–æ–Ω—ã, —Å–∞–º–æ–∫–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è '
                                      '–¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤—ã –Ω–µ –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚ö†Ô∏è –°–∞–º–æ–∫–∞—Ç –ø–µ—Ä–µ—Å—Ç–∞–ª –µ—Ö–∞—Ç—å")
def scooter_not_goes(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    BackToRentMenuButton = types.KeyboardButton("üîô –ùa–∑a–¥")

    markup.add(BackToMainMenuButton)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –í–∞—à —Å–∞–º–æ–∫–∞—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, '
                                      '—á—Ç–æ –í—ã –≤—ã–µ—Ö–∞–ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –∑–æ–Ω—ã, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–π –¥–ª—è –∫–∞—Ç–∞–Ω–∏—è.\n\n'
                                      '–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–µ–∑–¥–∫—É, –í–∞–º –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —Å–∞–º–æ–∫–∞—Ç –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é –∑–æ–Ω—É.',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üõ¥ –ö–∞–∫ –∫–∞—Ç–∞—Ç—å—Å—è?")
def how_to_ride_on_scooter(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    DidNotFindTheSearched = types.KeyboardButton("–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏?")
    BackToRentMenuButton = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")

    markup.add(DidNotFindTheSearched)
    markup.add(BackToRentMenuButton)

    bot.send_message(message.chat.id, HowToRideTutorialText, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–µ –Ω–∞—à–ª–∏ —á—Ç–æ –∏—Å–∫–∞–ª–∏?")
def did_not_find_the_researched(message):
    global flag
    flag = False

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, '–ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: +7XXXXXXXXXX',
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–°–ª–æ–º–∞–ª—Å—è —Å–∞–º–æ–∫–∞—Ç? –ù—É–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—Ç‚ùì")
def report(message):
    global flag
    flag = True
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    BackToMainMenuButton = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(BackToMainMenuButton)

    bot.send_message(message.chat.id, "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É.\n\n"
                                      "–ü—Ä–∏—à–ª–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω–æ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞ (–Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ).",
                     reply_markup=markup)


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    global flag
    if not flag:
        return

    try:
        photo_file = bot.get_file(message.photo[-1].file_id)
        photo_path = os.path.join(PHOTOS_DIR, f"{photo_file.file_id}.jpg")

        downloaded_file = bot.download_file(photo_file.file_path)
        with open(photo_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∞—Ä–µ–Ω–¥—ã (–î–î.–ú–ú, –ß–ß:–ú–ú)",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)

    except Exception as e:
        bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")


def process_rental_time(message, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    rental_time = message.text.strip()

    if not validate_rental_time(rental_time):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id,
                         "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú –ß–ß:–ú–ú",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–æ–º–µ—Ä –í–∞—à–µ–≥–æ —Å–∞–º–æ–∫–∞—Ç–∞", reply_markup=markup)
    bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)


def process_scooter_number(message, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    scooter_number = message.text

    if not scooter_number.isdigit():
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        bot.send_message(message.chat.id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –Ω–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞.", reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)
        return

    if len(scooter_number) != 4:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))

        bot.send_message(message.chat.id,
                         "–ù–æ–º–µ—Ä —Å–∞–º–æ–∫–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Å–∏–º–≤–æ–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_scooter_number, rental_time, photo_path)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
                         reply_markup=markup)
        bot.register_next_step_handler(message, process_phone_number, scooter_number, rental_time, photo_path)


def process_phone_number(message, scooter_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    phone_number = message.text.strip()

    if not is_valid_russian_phone_number(phone_number):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. "
                                          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: +7/7 –∏–ª–∏ 8.", reply_markup=markup)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è "
                                      "–ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é Akku-Batt.", reply_markup=markup)
    bot.register_next_step_handler(message, process_card_number, scooter_number, phone_number,
                                   rental_time, photo_path)


def process_card_number(message, scooter_number, phone_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    card_number = message.text

    if len(card_number) != 4:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button_back_to_menu)

        bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ 4 —Å–∏–º–≤–æ–ª–∞.\n"
                                          "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–æ–≤–∞.", reply_markup=markup)
        bot.register_next_step_handler(message, process_card_number, scooter_number, phone_number,
                                       rental_time, photo_path)
        return

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    bot.send_message(message.chat.id, "–û–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É", reply_markup=markup)
    bot.register_next_step_handler(message, process_description, scooter_number, phone_number,
                                   card_number, rental_time, photo_path)


def process_description(message, scooter_number, phone_number, card_number, rental_time, photo_path):
    if message.text == "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        back_to_menu(message)
        return

    description = message.text

    save_report(photo_path, scooter_number, phone_number, card_number, rental_time, description)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_back_to_menu = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button_back_to_menu)

    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –º—ã –ø—Ä–∏–Ω—è–ª–∏ –µ–≥–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n\n"
                                      "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–∞–º–æ–∫–∞—Ç –∏ –ø–æ–∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏.", reply_markup=markup)


def save_report(photo, scooter_number, phone_number, card_number, rental_time, description):
    conn = sqlite3.connect(DATABASE)
    cursor = conn.cursor()

    cursor.execute('''
        INSERT INTO reports (photo, scooter_number, phone_number, card_number, rental_time, description_of_the_problem)
        VALUES (?, ?, ?, ?, ?, ?)
    ''', (photo, scooter_number, phone_number, card_number, rental_time, description))

    conn.commit()
    conn.close()


def validate_rental_time(rental_time):
    import re
    pattern = r'^\d{2}\.\d{2} \d{2}:\d{2}$'
    return bool(re.match(pattern, rental_time))


bot.infinity_polling()
